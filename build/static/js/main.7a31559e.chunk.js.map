{"version":3,"sources":["assets/hyuna.jpeg","components/CoinFlip/Coin.jsx","assets/head.png","assets/tail.png","components/CoinFlip/FlipCoin.jsx","components/share/Navbar.jsx","components/share/Footer.jsx","assets/pick.png","components/CharacterCard/PickCharCard.jsx","components/CharacterCard/PickCard.jsx","assets/ban.png","components/CharacterCard/BanCharCard.jsx","components/CharacterCard/BanCard.jsx","assets/diano.gif","components/Timing/StopWatch.jsx","pages/Main.jsx","router/Routes.js","Redux/Reducers/AuthReducers.jsx","Redux/Reducers/BlockChainReducers.jsx","Redux/Reducers/RootReducer.jsx","Redux/Store/Store.jsx","App.js","registerServiceWorker.js","index.js"],"names":["Coin","Component","render","className","style","width","height","src","this","props","info","imgSrc","FlipCoin","constructor","super","state","currFace","totalFlips","heads","handleClick","bind","componentDidMount","setClick","choice","arr","Math","floor","random","length","flipCoin","newFace","coins","setState","curState","side","defaultProps","head","tail","Navbar","collapseID","username","localStorage","getItem","modal","modal1","modal2","team1name","team2name","toggle","toggle1","toggle2","handleChange","e","target","id","value","toggleCollapse","prevState","closeCollapse","collID","window","scrollTo","updateTeamName","setTeam","coinToss","nader","result","console","log","color","dark","expand","fixed","scrolling","href","hyuna","alt","onClick","isOpen","navbar","right","disabled","exact","to","onChange","label","icon","click","clickChild","size","centered","Footer","Date","getFullYear","PickCharCard","fullcharList","genshindb","characters","matchCategories","charDetails","getCharDetails","picClick","alert","picture","images","pick","waves","selected","map","x","SortableItem","SortableElement","item","SortableList","SortableContainer","items","between","center","index","PickCard","onSortEnd","oldIndex","newIndex","arrayMove","axis","BanCharCard","ban","around","BanCard","Stopwatch","team","updateTable","useState","time","setTime","running","setRunning","chamber","setChamber","half","setHalf","useEffect","interval","setInterval","prevTime","clearInterval","diano","Fragment","slice","Main","team1Table","team2Table","upTimeTable","teamNo","buffer","formatToTime","setTeamName","team1","team2","plusTime","minusTime","fluid","type","rows","hover","small","responsive","i","FirstHalf","SecondHalf","reduce","y","Routes","React","path","component","initState","login","AuthReducers","action","payload","blocks","validChain","balance","BlockChainReducers","RootReducer","combineReducers","auth","blockchain","middleWare","thunk","store","createStore","applyMiddleware","App","Store","overlay","marginTop","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"+MAAe,MAA0B,mCCEzC,MAAMA,UAAaC,YACjBC,SACE,OACE,qBAAKC,UAAU,cAAf,SACE,qBACEC,MAAO,CAAEC,MAAM,QAASC,OAAO,SAC/BC,IAAKC,KAAKC,MAAMC,KAAKC,YAOhBX,QCfA,MAA0B,iCCA1B,MAA0B,iCCKzC,MAAMY,UAAiBX,YAanBY,YAAYJ,GACRK,MAAML,GAEND,KAAKO,MAAQ,CACTC,SAAU,KACVC,WAAY,EACZC,MAAO,GAEXV,KAAKW,YAAcX,KAAKW,YAAYC,KAAKZ,MAE7Ca,oBACIb,KAAKC,MAAMa,SAASd,KAAKW,aAE7BI,OAAOC,GAEH,OAAOA,EADWC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,SAIrDC,WACI,MAAMC,EAAUtB,KAAKe,OAAOf,KAAKC,MAAMsB,OACvCvB,KAAKwB,UAASC,IACV,MAAMf,EAAQe,EAASf,OACD,SAAjBY,EAAQI,KAAkB,EAAI,GACnC,MAAO,CACHlB,SAAUc,EACVb,WAAYgB,EAAShB,WAAa,EAClCC,MAAOA,MAInBC,cACIX,KAAKqB,WAET3B,SAAU,MAAD,EACmCM,KAAKO,MAArCC,EADH,EACGA,SADH,EACaC,WADb,EACyBC,MAC9B,OACI,qBAAKf,UAAU,uBAAf,SACKa,GAAY,cAAC,EAAD,CAAMN,KAAMM,OAlDnCJ,EACKuB,aAAe,CAClBJ,MAAO,CAEH,CACIG,KAAM,OAAQvB,OAAQyB,GAE1B,CACIF,KAAM,OAAQvB,OAAQ0B,KAgDvBzB,QCvDf,MAAM0B,UAAerC,YAAW,eAAD,oBAE3Bc,MAAQ,CACJwB,WAAY,GACZC,SAAUC,aAAaC,QAAQ,QAC/BC,OAAO,EACPC,QAAQ,EACRC,QAAQ,EACRC,UAAW,GACXC,UAAW,IATY,KAW3BC,OAAS,KACLxC,KAAKwB,SAAS,CACVW,OAAQnC,KAAKO,MAAM4B,SAbA,KAgB3BM,QAAU,KACNzC,KAAKwB,SAAS,CACVY,QAASpC,KAAKO,MAAM6B,UAlBD,KAqB3BM,QAAU,KACN1C,KAAKwB,SAAS,CACVa,QAASrC,KAAKO,MAAM8B,UAvBD,KA0B3BM,aAAgBC,IACZ5C,KAAKwB,SAAS,CAAE,CAACoB,EAAEC,OAAOC,IAAKF,EAAEC,OAAOE,SA3BjB,KA8B3BC,eAAiBjB,GAAc,IAC3B/B,KAAKwB,UAASyB,IAAS,CACnBlB,WAAYkB,EAAUlB,aAAeA,EAAaA,EAAa,OAhC5C,KAmC3BmB,cAAgBC,GAAU,KAAO,MACrBpB,EAAe/B,KAAKO,MAApBwB,WACRqB,OAAOC,SAAS,EAAG,GACnBtB,IAAeoB,GAAUnD,KAAKwB,SAAS,CAAEO,WAAY,MAtC9B,KAwC3BuB,eAAiB,KACbtD,KAAKC,MAAMsD,QAAQ,QAAUvD,KAAKO,MAAM+B,UAAW,QAAUtC,KAAKO,MAAMgC,YAzCjD,KA2C3BiB,SAAW,KACPxD,KAAKwB,SAAS,CAAEiC,MAAO,KAAM,KACrBxC,KAAKE,SAAW,IAChBnB,KAAKwB,SAAS,CAAEkC,OAAQ,UACxBC,QAAQC,IAAI,WAEZ5D,KAAKwB,SAAS,CAAEkC,OAAQ,UACxBC,QAAQC,IAAI,cAKxBlE,SAAU,MACEqC,EAAe/B,KAAKO,MAApBwB,WAKS/B,KAAKgD,eAAe,sBAGrC,OACI,gCACI,eAAC,IAAD,CAAWa,MAAM,SAASC,MAAI,EAACC,OAAO,KAAKC,MAAM,MAAMC,WAAS,EAAhE,UACI,eAAC,IAAD,CAAgBC,KAAK,QAAQvE,UAAU,wBAAvC,UACI,qBAAKI,IAAKoE,EAAOrE,OAAO,KAAKsE,IAAI,KAAKzE,UAAU,mBAChD,wBAAQA,UAAU,eAAlB,oCAEJ,cAAC,IAAD,CACI0E,QAASrE,KAAKgD,eAAe,wBAEjC,cAAC,IAAD,CAAaF,GAAG,qBAAqBwB,OAAQvC,EAAYwC,QAAM,EAA/D,SACI,eAAC,IAAD,CAAcC,OAAK,EAAnB,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CACIC,UAAQ,EACRC,OAAK,EACLC,GAAG,IACHN,QAASrE,KAAKkD,cAAc,sBAJhC,SAMI,oDAGR,cAAC,IAAD,CAAYmB,QAASrE,KAAK0C,QAA1B,SACI,cAAC,IAAD,CACIgC,OAAK,EACLC,GAAG,IACHN,QAASrE,KAAKkD,cAAc,sBAHhC,SAKI,mDAGR,cAAC,IAAD,CAAYmB,QAASrE,KAAKyC,QAA1B,SACI,cAAC,IAAD,CACIiC,OAAK,EACLC,GAAG,IACHN,QAASrE,KAAKkD,cAAc,sBAHhC,SAKI,uDAGR,cAAC,IAAD,CAAYmB,QAASrE,KAAKwC,OAA1B,SACI,cAAC,IAAD,CACIkC,OAAK,EACLC,GAAG,IACHN,QAASrE,KAAKkD,cAAc,sBAHhC,SAKI,kEAQpB,eAAC,IAAD,CAAUoB,OAAQtE,KAAKO,MAAM6B,OAAQI,OAAQxC,KAAKyC,QAAlD,UACI,cAAC,IAAD,CAAgBD,OAAQxC,KAAKyC,QAA7B,8BACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAUmC,SAAU5E,KAAK2C,aAAcG,GAAG,YAAYC,MAAO/C,KAAKO,MAAM+B,UAAWuC,MAAM,cAAcC,KAAK,UAC5G,cAAC,IAAD,CAAUF,SAAU5E,KAAK2C,aAAcG,GAAG,YAAYC,MAAO/C,KAAKO,MAAMgC,UAAWsC,MAAM,cAAcC,KAAK,aAEhH,cAAC,IAAD,UACI,cAAC,IAAD,CAAQT,QAASrE,KAAKsD,eAAgBO,MAAM,SAA5C,+BAIR,eAAC,IAAD,CAAUS,OAAQtE,KAAKO,MAAM8B,OAAQG,OAAQxC,KAAK0C,QAAlD,UACI,cAAC,IAAD,CAAgBF,OAAQxC,KAAK0C,QAA7B,uBACA,cAAC,IAAD,UACI,cAAC,EAAD,CAAU5B,SAAUiE,GAAS/E,KAAKgF,WAAaD,MAEnD,eAAC,IAAD,WACI,cAAC,IAAD,CAAQlB,MAAM,OAAOQ,QAAS,IAAMrE,KAAKgF,aAAzC,uBACA,cAAC,IAAD,CAAQnB,MAAM,YAAYQ,QAASrE,KAAK0C,QAAxC,yBAKR,eAAC,IAAD,CAAU4B,OAAQtE,KAAKO,MAAM4B,MAAOK,OAAQxC,KAAKyC,QAASwC,KAAK,KAAKC,UAAQ,EAA5E,UACI,cAAC,IAAD,CAAgB1C,OAAQxC,KAAKwC,OAA7B,yBACA,eAAC,IAAD,WACI,eAAC,IAAD,WACI,eAAC,IAAD,WACI,6DACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAkB7C,UAAU,+BAA5B,wBACA,cAAC,IAAD,CAAkBA,UAAU,gCAA5B,wBACA,cAAC,IAAD,CAAkBA,UAAU,+BAA5B,wBACA,cAAC,IAAD,CAAkBA,UAAU,gCAA5B,wBACA,cAAC,IAAD,CAAkBA,UAAU,+BAA5B,yBACA,cAAC,IAAD,CAAkBA,UAAU,gCAA5B,yBACA,cAAC,IAAD,CAAkBA,UAAU,gCAA5B,yBACA,cAAC,IAAD,CAAkBA,UAAU,+BAA5B,yBACA,cAAC,IAAD,CAAkBA,UAAU,+BAA5B,yBACA,cAAC,IAAD,CAAkBA,UAAU,gCAA5B,yBACA,cAAC,IAAD,CAAkBA,UAAU,gCAA5B,yBACA,cAAC,IAAD,CAAkBA,UAAU,+BAA5B,+BAGR,eAAC,IAAD,WACI,8DACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAkBA,UAAU,gCAA5B,wBACA,cAAC,IAAD,CAAkBA,UAAU,+BAA5B,wBACA,cAAC,IAAD,CAAkBA,UAAU,gCAA5B,wBACA,cAAC,IAAD,CAAkBA,UAAU,+BAA5B,wBACA,cAAC,IAAD,CAAkBA,UAAU,gCAA5B,yBACA,cAAC,IAAD,CAAkBA,UAAU,+BAA5B,yBACA,cAAC,IAAD,CAAkBA,UAAU,+BAA5B,yBACA,cAAC,IAAD,CAAkBA,UAAU,gCAA5B,yBACA,cAAC,IAAD,CAAkBA,UAAU,gCAA5B,yBACA,cAAC,IAAD,CAAkBA,UAAU,+BAA5B,yBACA,cAAC,IAAD,CAAkBA,UAAU,+BAA5B,yBACA,cAAC,IAAD,CAAkBA,UAAU,gCAA5B,kCAIZ,uBACA,mBAAGA,UAAU,sCAAb,kDAEJ,cAAC,IAAD,UAEI,cAAC,IAAD,CAAQkE,MAAM,YAAYQ,QAASrE,KAAKwC,OAAxC,4BAQTV,QCpMA,MAAMqD,UAAe1F,YAKhCC,SACI,OACI,8BACI,cAAC,IAAD,CAAWC,UAAU,eAAekE,MAAM,SAA1C,SACI,oBAAGlE,UAAU,yCAAb,mBACY,IAAIyF,MAAOC,cADvB,cAEN,mBAAGnB,KAAK,IAAR,yD,6BCdC,MAA0B,iCCKzC,MAAMoB,UAAqB7F,YAAW,eAAD,oBACnCc,MAAQ,CACNgF,aAAcC,IAAUC,WAAW,QAAS,CAAEC,iBAAiB,IAC/DC,YAAa,IAHoB,KAKnCC,eAAkBhD,IACM,SAAnBA,EAAEC,OAAOE,OAEZ/C,KAAKwB,SAAS,CAAEmE,YAAaH,IAAUC,WAAW7C,EAAEC,OAAOE,UAR1B,KAUnC8C,SAAW,KACTC,MAAM,YAGRpG,SACE,IAAIqG,EAAU/F,KAAKO,MAAMoF,YAAYK,OACrC,OACE,8BACE,eAAC,IAAD,CAASnC,MAAM,OAAOjE,MAAO,CAAEC,MAAO,QAAtC,UACE,cAAC,IAAD,CAAcF,UAAU,YAAYI,IAAKgG,EAAUA,EAAQjB,KAAOmB,EAAMC,OAAK,IAC7E,cAAC,IAAD,UACE,cAAC,IAAD,UACE,yBAAQtB,SAAU5E,KAAK4F,eAAgBjG,UAAU,gCAAjD,UACE,wBAAQwG,UAAQ,EAACpD,MAAM,OAAvB,oBACC/C,KAAKO,MAAMgF,cAAgBvF,KAAKO,MAAMgF,aAAaa,KAAIC,GAAK,wBAAQtD,MAAOsD,EAAf,SAAmBA,mBASjFf,QChCf,MAAMgB,EAAeC,aAAgB,EAAGxD,WAEhC,cAAC,IAAD,CAAQkC,KAAK,IAAb,SACG,cAAC,EAAD,CAAcuB,KAAMzD,QAKzB0D,EAAeC,aAAkB,EAAGC,WAElC,6BACI,cAAC,IAAD,CAAQhH,UAAU,OAAOiH,SAAO,EAACC,QAAM,EAAvC,SACKF,EAAMP,KAAI,CAACrD,EAAO+D,IACf,cAACR,EAAD,CAAoCQ,MAAOA,EAAO/D,MAAOA,GAAzD,eAA2BA,YAO/C,MAAMgE,UAAiBtH,YAAW,eAAD,oBAC7Bc,MAAQ,CACJoG,MAAO,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,WAFrD,KAI7BK,UAAY,EAAGC,WAAUC,eACrBlH,KAAKwB,UAAS,EAAGmF,YAAH,CACVA,MAAOQ,YAAUR,EAAOM,EAAUC,QAI1CxH,SACI,OACI,8BACI,cAAC+G,EAAD,CAAcE,MAAO3G,KAAKO,MAAMoG,MAAOK,UAAWhH,KAAKgH,UAAWI,KAAK,UAKxEL,QC5CA,MAA0B,gCCKzC,MAAMM,UAAoB5H,YAAW,eAAD,oBAClCc,MAAQ,CACNgF,aAAcC,IAAUC,WAAW,QAAS,CAAEC,iBAAiB,IAC/DC,YAAa,IAHmB,KAKlCC,eAAkBhD,IACM,SAAnBA,EAAEC,OAAOE,OAEZ/C,KAAKwB,SAAS,CAAEmE,YAAaH,IAAUC,WAAW7C,EAAEC,OAAOE,UAG7DrD,SACE,IAAIqG,EAAU/F,KAAKO,MAAMoF,YAAYK,OACrC,OACE,8BACE,eAAC,IAAD,CAASnC,MAAM,QAAQjE,MAAO,CAAEC,MAAO,QAAvC,UACE,cAAC,IAAD,CAAcF,UAAU,YAAYI,IAAKgG,EAAUA,EAAQjB,KAAOwC,EAAMpB,OAAK,IAC7E,cAAC,IAAD,UACE,cAAC,IAAD,UACE,yBAAQtB,SAAU5E,KAAK4F,eAAgBjG,UAAU,gCAAjD,UACE,wBAAQwG,UAAQ,EAACpD,MAAM,OAAvB,oBACC/C,KAAKO,MAAMgF,cAAgBvF,KAAKO,MAAMgF,aAAaa,KAAIC,GAAK,wBAAQtD,MAAOsD,EAAf,SAAmBA,mBASjFgB,QC7Bf,MAAMf,EAAeC,aAAgB,EAAGxD,WAEhC,cAAC,IAAD,CAAQkC,KAAK,IAAb,SACG,cAAC,EAAD,CAAauB,KAAMzD,QAKxB0D,EAAeC,aAAkB,EAAGC,WAElC,6BACI,cAAC,IAAD,CAAQhH,UAAU,OAAO4H,QAAM,EAACV,QAAM,EAAtC,SACKF,EAAMP,KAAI,CAACrD,EAAO+D,IACf,cAAC,EAAD,CAAoCA,MAAOA,EAAO/D,MAAOA,GAAzD,eAA2BA,YAO/C,MAAMyE,UAAgB/H,YAAW,eAAD,oBAC5Bc,MAAQ,CACJoG,MAAO,CAAC,QAAS,QAAS,QAAS,UAFX,KAI5BK,UAAY,EAAGC,WAAUC,eACrBlH,KAAKwB,UAAS,EAAGmF,YAAH,CACVA,MAAOQ,YAAUR,EAAOM,EAAUC,QAI1CxH,SACI,OACI,8BACI,cAAC,EAAD,CAAciH,MAAO3G,KAAKO,MAAMoG,MAAOK,UAAWhH,KAAKgH,UAAWI,KAAK,UAKxEI,Q,QC5CA,MAA0B,kCCkE1BC,MA9DG,EAAGC,OAAMC,kBAAmB,MAAD,EACjBC,mBAAS,GADQ,mBAClCC,EADkC,KAC5BC,EAD4B,OAEXF,oBAAS,GAFE,mBAElCG,EAFkC,KAEzBC,EAFyB,OAGXJ,mBAAS,GAHE,mBAGlCK,EAHkC,KAGzBC,EAHyB,OAIjBN,mBAAS,aAJQ,mBAIlCO,EAJkC,KAI5BC,EAJ4B,KAqBzC,OAfAC,qBAAU,KACN,IAAIC,EAQJ,OAPIP,EACAO,EAAWC,aAAY,KACnBT,GAASU,GAAaA,EAAW,OAClC,IACKT,GACRU,cAAcH,GAEX,IAAMG,cAAcH,KAC5B,CAACP,IAMA,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAQ9C,KAAK,IAAb,SACI,sBAAKtF,UAAU,wBAAf,UACMoI,EAAU,sBAAMpI,UAAU,mBAAhB,SAAmC,qBAAKI,IAAK2I,EAAO5I,OAAO,KAAKD,MAAM,SAAiB,cAAC,IAAM8I,SAAP,IACnG,uBAAMhJ,UAAU,mBAAhB,WAAqC,IAAMsB,KAAKC,MAAO2G,EAAO,IAAS,KAAKe,OAAO,GAAnF,OACA,uBAAMjJ,UAAU,mBAAhB,WAAqC,IAAMsB,KAAKC,MAAO2G,EAAO,IAAQ,KAAKe,OAAO,GAAlF,OACA,sBAAMjJ,UAAU,mBAAhB,UAAqC,IAAQkI,EAAO,GAAM,KAAMe,OAAO,KACrEb,EAAU,sBAAMpI,UAAU,mBAAhB,SAAmC,qBAAKI,IAAK2I,EAAO5I,OAAO,KAAKD,MAAM,SAAiB,cAAC,IAAM8I,SAAP,IACnG,sBAAKhJ,UAAU,UAAf,UACI,cAAC,IAAD,CAAQsF,KAAK,KAAKpB,MAAQkE,EAAoB,MAAV,QAAiB1D,QAAS,IAAM2D,GAAYD,GAAhF,SAA4FA,EAAoB,OAAV,UACtG,cAAC,IAAD,CAAQ9C,KAAK,KAAKpB,MAAM,SAASQ,QAAS,IAAMyD,EAAQ,GAAxD,2BAKZ,cAAC,IAAD,CAAQ7C,KAAK,IAAb,SACI,eAAC,IAAD,WACI,gDACA,cAAC,IAAD,UACI,yBAAQL,SAAWhC,GAAMsF,EAAWtF,EAAEC,OAAOE,OAAQpD,UAAU,gCAA/D,UACI,wBAAQwG,UAAQ,EAACpD,MAAM,IAAvB,uBACA,wBAAQA,MAAM,IAAd,uBACA,wBAAQA,MAAM,IAAd,4BAGR,cAAC,IAAD,UACI,yBAAQ6B,SAAWhC,GAAMwF,EAAQxF,EAAEC,OAAOE,OAAQpD,UAAU,gCAA5D,UACI,wBAAQwG,UAAQ,EAACpD,MAAM,YAAvB,wBACA,wBAAQA,MAAM,aAAd,8BAGR,cAAC,IAAD,CAAQkC,KAAK,KAAKpB,MAAM,OAAOQ,QArCnD,WACIsD,EAAYD,EAAMG,EAAMI,EAASE,IAoCjB,+BClDxB,MAAMU,UAAapJ,YAAW,eAAD,oBAE3Bc,MAAQ,CACNuI,WAAY,CACV,CAAE,UAAa,EAAG,WAAc,GAChC,CAAE,UAAa,EAAG,WAAc,GAChC,CAAE,UAAa,EAAG,WAAc,IAElCC,WAAY,CACV,CAAE,UAAa,EAAG,WAAc,GAChC,CAAE,UAAa,EAAG,WAAc,GAChC,CAAE,UAAa,EAAG,WAAc,IAElCzG,UAAW,SACXC,UAAW,UAdc,KAgB3ByG,YAAc,CAACC,EAAQpB,EAAMI,EAASE,KAElC,IAKIe,EANQ,GAAVD,IACEC,EAASlJ,KAAKO,MAAMuI,YACjBb,EAAU,GAAGE,GAAQN,EAC5B7H,KAAKwB,SAAS,CAAEsH,WAAYI,OAGxBA,EAASlJ,KAAKO,MAAMwI,YACjBd,EAAU,GAAGE,GAAQN,EAC5B7H,KAAKwB,SAAS,CAAEuH,WAAYG,MAzBL,KA4B3BC,aAAgBtB,IACD,IAAM5G,KAAKC,MAAO2G,EAAO,IAAS,KAAKe,OAAO,GAAK,KAAO,IAAM3H,KAAKC,MAAO2G,EAAO,IAAQ,KAAKe,OAAO,GAAK,KAAO,IAAQf,EAAO,GAAM,KAAMe,OAAO,GA7BzI,KAgC3BQ,YAAc,CAACC,EAAOC,KACpBtJ,KAAKwB,SAAS,CAAEc,UAAW+G,EAAO9G,UAAW+G,KAjCpB,KAoC3BC,SAAW,CAACN,EAAOhB,EAAQE,KAEvB,IAKIe,EANQ,GAAVD,IACEC,EAASlJ,KAAKO,MAAMuI,YACjBb,GAASE,IAAS,IACzBnI,KAAKwB,SAAS,CAAEsH,WAAYI,OAGxBA,EAASlJ,KAAKO,MAAMwI,YACjBd,GAASE,IAAS,IACzBnI,KAAKwB,SAAS,CAAEuH,WAAYG,MA7CL,KAiD3BM,UAAY,CAACP,EAAOhB,EAAQE,KAExB,IAKIe,EANQ,GAAVD,IACEC,EAASlJ,KAAKO,MAAMuI,YACjBb,GAASE,IAAS,IACzBnI,KAAKwB,SAAS,CAAEsH,WAAYI,OAGxBA,EAASlJ,KAAKO,MAAMwI,YACjBd,GAASE,IAAS,IACzBnI,KAAKwB,SAAS,CAAEuH,WAAYG,MAIhCxJ,SACE,OACE,gCACE,cAAC,EAAD,CAAQ6D,QAASvD,KAAKoJ,cACtB,uBACA,eAAC,IAAD,CAAcK,OAAK,EAAnB,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAQxE,KAAK,IAAb,UACE,qBAAItF,UAAU,wBAAd,UAAuCK,KAAKO,MAAM+B,UAAlD,YACA,uBACA,cAAC,EAAD,OAEF,eAAC,IAAD,CAAQ2C,KAAK,IAAb,UACE,qBAAItF,UAAU,wBAAd,UAAuCK,KAAKO,MAAM+B,UAAlD,WACA,uBACA,cAAC,EAAD,UAGJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAQ2C,KAAK,IAAb,SACE,cAAC,IAAD,CAAUyE,KAAK,WAAW7E,MAAO7E,KAAKO,MAAM+B,UAAY,oBAAqBqH,KAAK,IAAI7E,KAAK,kBAE7F,cAAC,IAAD,CAAQG,KAAK,IAAb,SACE,cAAC,IAAD,CAAUyE,KAAK,WAAW7E,MAAO7E,KAAKO,MAAM+B,UAAY,qBAAsBqH,KAAK,IAAI7E,KAAK,kBAE9F,cAAC,IAAD,CAAQG,KAAK,SAGf,eAAC,IAAD,WACE,eAAC,IAAD,CAAQA,KAAK,IAAb,UACE,qBAAItF,UAAU,yBAAd,UAAwCK,KAAKO,MAAMgC,UAAnD,YACA,uBACA,cAAC,EAAD,OAEF,eAAC,IAAD,CAAQ0C,KAAK,IAAb,UACE,qBAAItF,UAAU,yBAAd,UAAwCK,KAAKO,MAAMgC,UAAnD,WACA,uBACA,cAAC,EAAD,UAGJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAQ0C,KAAK,IAAb,SACE,cAAC,IAAD,CAAUyE,KAAK,WAAW7E,MAAO7E,KAAKO,MAAMgC,UAAY,oBAAqBoH,KAAK,IAAI7E,KAAK,kBAE7F,cAAC,IAAD,CAAQG,KAAK,IAAb,SACE,cAAC,IAAD,CAAUyE,KAAK,WAAW7E,MAAO7E,KAAKO,MAAMgC,UAAY,qBAAsBoH,KAAK,IAAI7E,KAAK,kBAE9F,cAAC,IAAD,CAAQG,KAAK,SAGf,eAAC,IAAD,WACE,eAAC,IAAD,CAAQA,KAAK,IAAb,UACE,qBAAItF,UAAU,wBAAd,UAAuCK,KAAKO,MAAM+B,UAAlD,cACA,uBACA,cAAC,EAAD,CAAWoF,KAAM,EAAGC,YAAa3H,KAAKgJ,cACtC,eAAC,IAAD,CAAUY,OAAK,EAACC,OAAK,EAACC,YAAU,EAAhC,UACE,cAAC,IAAD,UACE,+BACE,yCACA,iDACA,kDACA,iDAGJ,eAAC,IAAD,WACG9J,KAAKO,MAAMuI,YAAc9I,KAAKO,MAAMuI,WAAW1C,KAAI,CAACC,EAAG0D,IAEpD,+BACE,uCAAUA,KACV,+BAAI,cAAC,IAAD,CAAQ9E,KAAK,KAAKZ,QAAS,IAAMrE,KAAKwJ,UAAU,IAAIO,EAAE,aAAclG,MAAM,MAA1E,eAAJ,IAAgG7D,KAAKmJ,aAAa9C,EAAE2D,WAApH,IAAgI,cAAC,IAAD,CAAQ/E,KAAK,KAAKZ,QAAS,IAAMrE,KAAKuJ,SAAS,IAAIQ,EAAE,aAAclG,MAAM,OAAzE,kBAChI,+BAAI,cAAC,IAAD,CAAQoB,KAAK,KAAKZ,QAAS,IAAMrE,KAAKwJ,UAAU,IAAIO,EAAE,cAAelG,MAAM,MAA3E,eAA4F7D,KAAKmJ,aAAa9C,EAAE4D,YAApH,IAAiI,cAAC,IAAD,CAAQhF,KAAK,KAAKZ,QAAS,IAAMrE,KAAKuJ,SAAS,IAAIQ,EAAE,cAAelG,MAAM,OAA1E,kBACjI,+BAAK7D,KAAKmJ,aAAa9C,EAAE2D,UAAY3D,EAAE4D,YAAvC,YAIN,+BACE,4CACA,6BAAKjK,KAAKmJ,aAAanJ,KAAKO,MAAMuI,WAAW1C,KAAIC,GAAKA,EAAE2D,YAAWE,QAAO,CAAC7D,EAAG8D,IAAM9D,EAAI8D,OACxF,6BAAKnK,KAAKmJ,aAAanJ,KAAKO,MAAMuI,WAAW1C,KAAIC,GAAKA,EAAE4D,aAAYC,QAAO,CAAC7D,EAAG8D,IAAM9D,EAAI8D,OACzF,6BAAKnK,KAAKmJ,aAAanJ,KAAKO,MAAMuI,WAAW1C,KAAIC,GAAKA,EAAE4D,aAAYC,QAAO,CAAC7D,EAAG8D,IAAM9D,EAAI8D,IAAKnK,KAAKO,MAAMuI,WAAW1C,KAAIC,GAAKA,EAAE2D,YAAWE,QAAO,CAAC7D,EAAG8D,IAAM9D,EAAI8D,mBAKvK,eAAC,IAAD,CAAQlF,KAAK,IAAb,UACE,qBAAItF,UAAU,yBAAd,UAAwCK,KAAKO,MAAMgC,UAAnD,cACA,uBACA,cAAC,EAAD,CAAWmF,KAAM,EAAGC,YAAa3H,KAAKgJ,cACtC,eAAC,IAAD,CAAUY,OAAK,EAACC,OAAK,EAACC,YAAU,EAAhC,UACE,cAAC,IAAD,UACE,+BACE,yCACA,iDACA,kDACA,iDAGJ,eAAC,IAAD,WACG9J,KAAKO,MAAMwI,YAAc/I,KAAKO,MAAMwI,WAAW3C,KAAI,CAACC,EAAG0D,IAEpD,+BACE,uCAAUA,KACV,+BAAI,cAAC,IAAD,CAAQ9E,KAAK,KAAKZ,QAAS,IAAMrE,KAAKwJ,UAAU,IAAIO,EAAE,aAAclG,MAAM,MAA1E,eAAJ,IAAgG7D,KAAKmJ,aAAa9C,EAAE2D,WAApH,IAAgI,cAAC,IAAD,CAAQ/E,KAAK,KAAKZ,QAAS,IAAMrE,KAAKuJ,SAAS,IAAIQ,EAAE,aAAclG,MAAM,OAAzE,kBAChI,+BAAI,cAAC,IAAD,CAAQoB,KAAK,KAAKZ,QAAS,IAAMrE,KAAKwJ,UAAU,IAAIO,EAAE,cAAelG,MAAM,MAA3E,eAA4F7D,KAAKmJ,aAAa9C,EAAE4D,YAApH,IAAiI,cAAC,IAAD,CAAQhF,KAAK,KAAKZ,QAAS,IAAMrE,KAAKuJ,SAAS,IAAIQ,EAAE,cAAelG,MAAM,OAA1E,kBACjI,6BAAK7D,KAAKmJ,aAAa9C,EAAE2D,UAAY3D,EAAE4D,mBAI7C,+BACE,4CACA,6BAAKjK,KAAKmJ,aAAanJ,KAAKO,MAAMwI,WAAW3C,KAAIC,GAAKA,EAAE2D,YAAWE,QAAO,CAAC7D,EAAG8D,IAAM9D,EAAI8D,OACxF,6BAAKnK,KAAKmJ,aAAanJ,KAAKO,MAAMwI,WAAW3C,KAAIC,GAAKA,EAAE4D,aAAYC,QAAO,CAAC7D,EAAG8D,IAAM9D,EAAI8D,OACzF,6BAAKnK,KAAKmJ,aAAanJ,KAAKO,MAAMwI,WAAW3C,KAAIC,GAAKA,EAAE4D,aAAYC,QAAO,CAAC7D,EAAG8D,IAAM9D,EAAI8D,IAAKnK,KAAKO,MAAMwI,WAAW3C,KAAIC,GAAKA,EAAE2D,YAAWE,QAAO,CAAC7D,EAAG8D,IAAM9D,EAAI8D,yBAO3K,uBACA,uBACA,cAAC,EAAD,QAKOtB,QC7Lf,MAAMuB,UAAeC,IAAM5K,UACzBC,SACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgF,OAAK,EAAC4F,KAAK,IAAIC,UAAW1B,IACjC,cAAC,IAAD,CAAOnJ,OAAQ,IAAM,iDAMd0K,Q,wBClBd,MAAMI,EAAY,CACfC,OAAO,GAcIC,MAXM,CAACnK,EAAQiK,EAAWG,KACrC,OAAQA,EAAOjB,MACX,IAAK,cACD,OAAO,2BACAnJ,GADP,IAEIkK,MAAOE,EAAOC,UAEtB,QACI,OAAOrK,ICZnB,MAAMiK,EAAY,CACdK,OAAQ,GACRC,YAAY,EACZC,QAAS,IA6BEC,MA1BY,CAACzK,EAAQiK,EAAWG,KAC3C,OAAQA,EAAOjB,MACX,IAAK,cACD,OAAO,2BACAnJ,GADP,IAEIsK,OAAQF,EAAOC,UAEvB,IAAK,cACD,OAAO,2BACArK,GADP,IAEIuK,WAAYH,EAAOC,UAE3B,IAAK,gBACD,OAAO,2BACArK,GADP,IAEIsK,OAAQ,IAAItK,EAAMsK,OAAQF,EAAOC,WAEzC,IAAK,cACD,OAAO,2BACArK,GADP,IAEIwK,QAASJ,EAAOC,UAExB,QACI,OAAOrK,ICjBJ0K,MALKC,YAAgB,CAChCC,KAAMT,EACNU,WAAYJ,ICFhB,MACMK,EAAa,CAACC,KAGLC,OAFDC,YAAYP,EAFL,GAEgCQ,eAAmBJ,I,SCHxE,MAAMK,WAAYjM,YAAW,eAAD,oBAC1Bc,MAAQ,CACNwB,WAAY,IAEdrC,SAAU,MAEAqC,EAAe/B,KAAKO,MAApBwB,WACR,OACE,cAAC,KAAD,CAAUwJ,MAAOI,GAAjB,SACE,cAAC,IAAD,UACE,sBAAKhM,UAAU,SAAf,UACGoC,GAAc6J,QACf,sBAAMhM,MAAO,CAAEiM,UAAW,QAA1B,SACE,cAAC,EAAD,cASCH,UClBf,MAAMI,GAAcC,QACW,cAA7B3I,OAAO4I,SAASC,UAEe,UAA7B7I,OAAO4I,SAASC,UAEhB7I,OAAO4I,SAASC,SAASC,MACvB,2DA6BN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAKC,IACJA,EAAaC,cAAgB,KAC3B,MAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,KACA,cAA3BF,EAAiBpM,QACf8L,UAAUC,cAAcQ,WAK1BnJ,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBmJ,OAAMC,IACLrJ,QAAQqJ,MAAM,4CAA6CA,MC5DjEC,IAASvN,OAAQ,cAAC,GAAD,IAAUwN,SAASC,eAAe,SDUpC,WACb,GAA6C,kBAAmBd,UAAW,CAGzE,GADkB,IAAIe,IAAIC,gBAAwBjK,OAAO4I,UAC3CsB,SAAWlK,OAAO4I,SAASsB,OAIvC,OAGFlK,OAAOmK,iBAAiB,QAAQ,KAC9B,MAAMnB,EAAK,UAAMiB,gBAAN,sBAENvB,GAwCX,SAAiCM,GAE/BoB,MAAMpB,GACHI,MAAKiB,IAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CxB,UAAUC,cAAcwB,MAAMtB,MAAKC,IACjCA,EAAasB,aAAavB,MAAK,KAC7BpJ,OAAO4I,SAASgC,eAKpB7B,GAAgBC,MAGnBW,OAAM,KACLpJ,QAAQC,IACN,oEAzDAqK,CAAwB7B,GAHxBD,GAAgBC,OCxBxB8B,I","file":"static/js/main.7a31559e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hyuna.690c7278.jpeg\";","import React,{ Component } from 'react'\r\n \r\nclass Coin extends Component{\r\n  render(){\r\n    return(\r\n      <div className='text-center'>\r\n        <img\r\n          style={{ width:'200px', height:'200px' }}\r\n          src={this.props.info.imgSrc}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n \r\nexport default Coin","export default __webpack_public_path__ + \"static/media/head.0085f11c.png\";","export default __webpack_public_path__ + \"static/media/tail.2549dd14.png\";","import React, { Component } from 'react'\r\nimport Coin from './Coin'\r\nimport head from '../../assets/head.png'\r\nimport tail from '../../assets/tail.png'\r\n\r\nclass FlipCoin extends Component {\r\n    static defaultProps = {\r\n        coins: [\r\n            // Sides of the coin\r\n            {\r\n                side: 'head', imgSrc: head\r\n            },\r\n            {\r\n                side: 'tail', imgSrc: tail\r\n            }\r\n        ]\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        // Responsible to render current updated coin face\r\n        this.state = {\r\n            currFace: null,\r\n            totalFlips: 0,\r\n            heads: 0\r\n        }\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        this.props.setClick(this.handleClick)\r\n    }\r\n    choice(arr) {\r\n        const randomIdx = Math.floor(Math.random() * arr.length)\r\n        return arr[randomIdx]\r\n    }\r\n\r\n    flipCoin() {\r\n        const newFace = this.choice(this.props.coins)\r\n        this.setState(curState => {\r\n            const heads = curState.heads +\r\n                (newFace.side === 'head' ? 1 : 0)\r\n            return {\r\n                currFace: newFace,\r\n                totalFlips: curState.totalFlips + 1,\r\n                heads: heads\r\n            }\r\n        })\r\n    }\r\n    handleClick() {\r\n        this.flipCoin()\r\n    }\r\n    render() {\r\n        const { currFace, totalFlips, heads } = this.state\r\n        return (\r\n            <div className='align-content-center'>\r\n                {currFace && <Coin info={currFace} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FlipCoin\r\n","import React, { Component } from 'react'\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBDropdown, MDBDropdownMenu, MDBDropdownToggle, MDBIcon, MDBDropdownItem, MDBContainer } from 'mdbreact';\r\nimport hyuna from '../../assets/hyuna.jpeg';\r\nimport { MDBRow, MDBCol, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBCard, MDBListGroup, MDBListGroupItem, MDBInput } from 'mdbreact';\r\nimport FlipCoin from '../CoinFlip/FlipCoin';\r\n\r\nclass Navbar extends Component {\r\n\r\n    state = {\r\n        collapseID: '',\r\n        username: localStorage.getItem(\"name\"),\r\n        modal: false,\r\n        modal1: false,\r\n        modal2: false,\r\n        team1name: \"\",\r\n        team2name: \"\",\r\n    };\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n    toggle1 = () => {\r\n        this.setState({\r\n            modal1: !this.state.modal1\r\n        });\r\n    }\r\n    toggle2 = () => {\r\n        this.setState({\r\n            modal2: !this.state.modal2\r\n        });\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value })\r\n    }\r\n\r\n    toggleCollapse = collapseID => () =>\r\n        this.setState(prevState => ({\r\n            collapseID: prevState.collapseID !== collapseID ? collapseID : ''\r\n        }));\r\n\r\n    closeCollapse = collID => () => {\r\n        const { collapseID } = this.state;\r\n        window.scrollTo(0, 0);\r\n        collapseID === collID && this.setState({ collapseID: '' });\r\n    };\r\n    updateTeamName = () => {\r\n        this.props.setTeam(\"Team \" + this.state.team1name, \"Team \" + this.state.team2name)\r\n    }\r\n    coinToss = () => {\r\n        this.setState({ nader: \"\" }, () => {\r\n            if (Math.random() < 0.5) {\r\n                this.setState({ result: \"heads\" });\r\n                console.log(\"heads\");\r\n            } else {\r\n                this.setState({ result: \"tails\" });\r\n                console.log(\"tails\");\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { collapseID } = this.state;\r\n        const overlay = (\r\n            <div\r\n                id='sidenav-overlay'\r\n                style={{ backgroundColor: 'blue' }}\r\n                onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n            />\r\n        );\r\n        return (\r\n            <div>\r\n                <MDBNavbar color='indigo' dark expand='md' fixed='top' scrolling>\r\n                    <MDBNavbarBrand href='/home' className='py-0 font-weight-bold'>\r\n                        <img src={hyuna} height=\"50\" alt=\"50\" className=\"rounded-circle\" />\r\n                        <strong className='align-middle'>Genshin Abyss Draft</strong>\r\n                    </MDBNavbarBrand>\r\n                    <MDBNavbarToggler\r\n                        onClick={this.toggleCollapse('mainNavbarCollapse')}\r\n                    />\r\n                    <MDBCollapse id='mainNavbarCollapse' isOpen={collapseID} navbar>\r\n                        <MDBNavbarNav right>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink\r\n                                    disabled\r\n                                    exact\r\n                                    to='#'\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                >\r\n                                    <strong>Print Page</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem onClick={this.toggle2}>\r\n                                <MDBNavLink\r\n                                    exact\r\n                                    to='#'\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                >\r\n                                    <strong>Coin Flip</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem onClick={this.toggle1}>\r\n                                <MDBNavLink\r\n                                    exact\r\n                                    to='#'\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                >\r\n                                    <strong>Team Settings</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem onClick={this.toggle}>\r\n                                <MDBNavLink\r\n                                    exact\r\n                                    to='#'\r\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\r\n                                >\r\n                                    <strong>Draft Cycle Info</strong>\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                        </MDBNavbarNav>\r\n                    </MDBCollapse>\r\n                </MDBNavbar>\r\n\r\n\r\n                <MDBModal isOpen={this.state.modal1} toggle={this.toggle1}>\r\n                    <MDBModalHeader toggle={this.toggle1}>Change Team Name</MDBModalHeader>\r\n                    <MDBModalBody>\r\n                        <MDBInput onChange={this.handleChange} id=\"team1name\" value={this.state.team1name} label=\"Team 1 Name\" icon=\"users\" />\r\n                        <MDBInput onChange={this.handleChange} id=\"team2name\" value={this.state.team2name} label=\"Team 2 Name\" icon=\"users\" />\r\n                    </MDBModalBody>\r\n                    <MDBModalFooter>\r\n                        <MDBBtn onClick={this.updateTeamName} color=\"orange\">Save changes</MDBBtn>\r\n                    </MDBModalFooter>\r\n                </MDBModal>\r\n\r\n                <MDBModal isOpen={this.state.modal2} toggle={this.toggle2}>\r\n                    <MDBModalHeader toggle={this.toggle2}>Coin Flip</MDBModalHeader>\r\n                    <MDBModalBody>\r\n                        <FlipCoin setClick={click => this.clickChild = click} />\r\n                    </MDBModalBody>\r\n                    <MDBModalFooter>\r\n                        <MDBBtn color=\"blue\" onClick={() => this.clickChild()}>Flip Coin</MDBBtn>\r\n                        <MDBBtn color=\"secondary\" onClick={this.toggle2}>Close</MDBBtn>\r\n                    </MDBModalFooter>\r\n                </MDBModal>\r\n\r\n\r\n                <MDBModal isOpen={this.state.modal} toggle={this.toggle1} size=\"lg\" centered>\r\n                    <MDBModalHeader toggle={this.toggle}>Draft Cycle</MDBModalHeader>\r\n                    <MDBModalBody>\r\n                        <MDBRow>\r\n                            <MDBCol>\r\n                                <h5>First Half Ban / Pick Phase</h5>\r\n                                <MDBListGroup>\r\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Ban</MDBListGroupItem>\r\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Ban</MDBListGroupItem>\r\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Ban</MDBListGroupItem>\r\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Ban</MDBListGroupItem>\r\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\r\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\r\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\r\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\r\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\r\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\r\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\r\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\r\n                                </MDBListGroup>\r\n                            </MDBCol>\r\n                            <MDBCol>\r\n                                <h5>Second Half Ban / Pick Phase</h5>\r\n                                <MDBListGroup>\r\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Ban</MDBListGroupItem>\r\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Ban</MDBListGroupItem>\r\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Ban</MDBListGroupItem>\r\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Ban</MDBListGroupItem>\r\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\r\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\r\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\r\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\r\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\r\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\r\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\r\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\r\n                                </MDBListGroup>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                        <br />\r\n                        <p className='text-left red-text font-weight-bold'>*Assume team 1 get first ban pick</p>\r\n                    </MDBModalBody>\r\n                    <MDBModalFooter>\r\n\r\n                        <MDBBtn color=\"secondary\" onClick={this.toggle}>Close</MDBBtn>\r\n                    </MDBModalFooter>\r\n                </MDBModal>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Navbar","import React, { Component } from 'react'\nimport { MDBFooter } from 'mdbreact';\n\nexport default class Footer extends Component {\n    /**\n     * Footer \n     * @returns Footer\n     */\n    render() {\n        return (\n            <div>\n                <MDBFooter className=\"fixed-bottom\" color='indigo'>\n                    <p className='footer-copyright mb-0 py-3 text-center'>\n                        &copy; {new Date().getFullYear()} Copyright:\n              <a href='#'> Coded by: 김현아#2808 </a>\n                    </p>\n                </MDBFooter>\n            </div>\n        )\n    }\n}\n","export default __webpack_public_path__ + \"static/media/pick.22f0d125.png\";","import React, { Component } from 'react'\r\nimport genshindb from 'genshin-db'\r\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\r\nimport pick from '../../assets/pick.png'\r\n\r\nclass PickCharCard extends Component {\r\n  state = {\r\n    fullcharList: genshindb.characters('names', { matchCategories: true }),\r\n    charDetails: {}\r\n  }\r\n  getCharDetails = (e) => {\r\n    if(e.target.value === \"null\")\r\n      return\r\n    this.setState({ charDetails: genshindb.characters(e.target.value) })\r\n  }\r\n  picClick = () => {\r\n    alert(\"it work\")\r\n  }\r\n\r\n  render() {\r\n    var picture = this.state.charDetails.images\r\n    return (\r\n      <div>\r\n        <MDBCard color='cyan' style={{ width: \"7rem\" }}>\r\n          <MDBCardImage className=\"img-fluid\" src={picture ? picture.icon : pick} waves />\r\n          <MDBCardBody>\r\n            <MDBCardText>\r\n              <select onChange={this.getCharDetails} className=\"browser-default custom-select\">\r\n                <option selected value=\"null\">Select</option>\r\n                {this.state.fullcharList && this.state.fullcharList.map(x => <option value={x}>{x}</option>)}\r\n              </select>\r\n            </MDBCardText>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default PickCharCard","import React, { Component } from 'react'\nimport { SortableContainer, SortableElement, arrayMove } from 'react-sortable-hoc';\nimport { MDBContainer, MDBRow, MDBCol, MDBAnimation, MDBBtn } from \"mdbreact\"\nimport PickCharCard from './PickCharCard';\n\n\nconst SortableItem = SortableElement(({ value }) => {\n    return (\n        <MDBCol size='1'>\n           <PickCharCard item={value} />\n        </MDBCol>\n    )\n});\n\nconst SortableList = SortableContainer(({ items }) => {\n    return (\n        <ul>\n            <MDBRow className='mr-5' between center>\n                {items.map((value, index) => (\n                    <SortableItem key={`item-${value}`} index={index} value={value} />\n                ))}\n            </MDBRow>\n        </ul>\n    );\n});\n\nclass PickCard extends Component {\n    state = {\n        items: ['Pick 1', 'Pick 2', 'Pick 3', 'Pick 4', 'Pick 5', 'Pick 6', 'Pick 7', 'Pick 8'],\n    };\n    onSortEnd = ({ oldIndex, newIndex }) => {\n        this.setState(({ items }) => ({\n            items: arrayMove(items, oldIndex, newIndex),\n        }));\n    };\n\n    render() {\n        return (\n            <div>\n                <SortableList items={this.state.items} onSortEnd={this.onSortEnd} axis=\"xy\" />\n            </div>\n        )\n    }\n}\nexport default PickCard","export default __webpack_public_path__ + \"static/media/ban.94102931.png\";","import React, { Component } from 'react'\r\nimport genshindb from 'genshin-db'\r\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\r\nimport ban from '../../assets/ban.png'\r\n\r\nclass BanCharCard extends Component {\r\n  state = {\r\n    fullcharList: genshindb.characters('names', { matchCategories: true }),\r\n    charDetails: {}\r\n  }\r\n  getCharDetails = (e) => {\r\n    if(e.target.value === \"null\")\r\n      return\r\n    this.setState({ charDetails: genshindb.characters(e.target.value) })\r\n  }\r\n\r\n  render() {\r\n    var picture = this.state.charDetails.images\r\n    return (\r\n      <div>\r\n        <MDBCard color='black' style={{ width: \"7rem\" }}>\r\n          <MDBCardImage className=\"img-fluid\" src={picture ? picture.icon : ban } waves />\r\n          <MDBCardBody>\r\n            <MDBCardText>\r\n              <select onChange={this.getCharDetails} className=\"browser-default custom-select\">\r\n                <option selected value=\"null\">Select</option>\r\n                {this.state.fullcharList && this.state.fullcharList.map(x => <option value={x}>{x}</option>)}\r\n              </select>\r\n            </MDBCardText>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default BanCharCard","import React, { Component } from 'react'\nimport { SortableContainer, SortableElement, arrayMove } from 'react-sortable-hoc';\nimport { MDBContainer, MDBRow, MDBCol, MDBAnimation, MDBBtn } from \"mdbreact\"\nimport BanCharCard from './BanCharCard';\n\n\nconst SortableItem = SortableElement(({ value }) => {\n    return (\n        <MDBCol size='3'>\n           <BanCharCard item={value} />\n        </MDBCol>\n    )\n});\n\nconst SortableList = SortableContainer(({ items }) => {\n    return (\n        <ul>\n            <MDBRow className='mr-5' around center>\n                {items.map((value, index) => (\n                    <SortableItem key={`item-${value}`} index={index} value={value} />\n                ))}\n            </MDBRow>\n        </ul>\n    );\n});\n\nclass BanCard extends Component {\n    state = {\n        items: ['Ban 1', 'Ban 2', 'Ban 3', 'Ban 4'],\n    };\n    onSortEnd = ({ oldIndex, newIndex }) => {\n        this.setState(({ items }) => ({\n            items: arrayMove(items, oldIndex, newIndex),\n        }));\n    };\n\n    render() {\n        return (\n            <div>\n                <SortableList items={this.state.items} onSortEnd={this.onSortEnd} axis=\"xy\" />\n            </div>\n        )\n    }\n}\nexport default BanCard","export default __webpack_public_path__ + \"static/media/diano.9813c5c6.gif\";","import React, { useState, useEffect } from \"react\";\r\nimport { MDBRow, MDBCol, MDBAnimation, MDBBtn, MDBContainer } from \"mdbreact\"\r\nimport diano from '../../assets/diano.gif'\r\n\r\nconst Stopwatch = ({ team, updateTable }) => {\r\n    const [time, setTime] = useState(0);\r\n    const [running, setRunning] = useState(false);\r\n    const [chamber, setChamber] = useState(1)\r\n    const [half, setHalf] = useState(\"FirstHalf\")\r\n\r\n    useEffect(() => {\r\n        let interval;\r\n        if (running) {\r\n            interval = setInterval(() => {\r\n                setTime((prevTime) => prevTime + 10);\r\n            }, 10);\r\n        } else if (!running) {\r\n            clearInterval(interval);\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [running]);\r\n    function submitTime() {\r\n        updateTable(team, time, chamber, half)\r\n    }\r\n\r\n    return (\r\n        <MDBContainer>\r\n            <MDBRow>\r\n                <MDBCol size=\"4\">\r\n                    <div className=\"stopwatch text-center\">\r\n                        { running ? <span className=\"font-weight-bold\"><img src={diano} height=\"30\" width=\"30\" /></span> : <React.Fragment></React.Fragment>}\r\n                        <span className=\"font-weight-bold\">{(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:</span>\r\n                        <span className=\"font-weight-bold\">{(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}:</span>\r\n                        <span className=\"font-weight-bold\">{(\"0\" + ((time / 10) % 100)).slice(-2)}</span>\r\n                        { running ? <span className=\"font-weight-bold\"><img src={diano} height=\"30\" width=\"30\" /></span> : <React.Fragment></React.Fragment>}\r\n                        <div className=\"buttons\">\r\n                            <MDBBtn size=\"sm\" color={!running ? \"green\" : \"red\"} onClick={() => setRunning(!running)}>{!running ? \"Start\" : \"Stop\"}</MDBBtn>\r\n                            <MDBBtn size=\"sm\" color=\"orange\" onClick={() => setTime(0)}>Reset</MDBBtn>\r\n                        </div>\r\n\r\n                    </div>\r\n                </MDBCol>\r\n                <MDBCol size=\"8\">\r\n                    <MDBRow>\r\n                        <h3>Set timing on:</h3>\r\n                        <MDBCol>\r\n                            <select onChange={(e) => setChamber(e.target.value)} className=\"browser-default custom-select\">\r\n                                <option selected value=\"1\">Chamber 1</option>\r\n                                <option value=\"2\">Chamber 2</option>\r\n                                <option value=\"3\">Chamber 3</option>\r\n                            </select>\r\n                        </MDBCol>\r\n                        <MDBCol>\r\n                            <select onChange={(e) => setHalf(e.target.value)} className=\"browser-default custom-select\">\r\n                                <option selected value=\"FirstHalf\">First Half</option>\r\n                                <option value=\"SecondHalf\">Second Half</option>\r\n                            </select>\r\n                        </MDBCol>\r\n                        <MDBBtn size=\"sm\" color=\"blue\" onClick={submitTime}>Submit</MDBBtn>\r\n                    </MDBRow>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer >\r\n    );\r\n};\r\n\r\nexport default Stopwatch;","import React, { Component } from 'react'\r\nimport Navbar from '../components/share/Navbar'\r\nimport Footer from '../components/share/Footer'\r\nimport { MDBContainer, MDBRow, MDBCol, MDBAnimation, MDBBtn, MDBTable, MDBTableBody, MDBTableHead, MDBInput } from \"mdbreact\"\r\nimport PickCard from '../components/CharacterCard/PickCard'\r\nimport BanCard from '../components/CharacterCard/BanCard'\r\nimport Stopwatch from '../components/Timing/StopWatch'\r\n\r\nclass Main extends Component {\r\n\r\n  state = {\r\n    team1Table: [\r\n      { \"FirstHalf\": 0, \"SecondHalf\": 0 },\r\n      { \"FirstHalf\": 0, \"SecondHalf\": 0 },\r\n      { \"FirstHalf\": 0, \"SecondHalf\": 0 }\r\n    ],\r\n    team2Table: [\r\n      { \"FirstHalf\": 0, \"SecondHalf\": 0 },\r\n      { \"FirstHalf\": 0, \"SecondHalf\": 0 },\r\n      { \"FirstHalf\": 0, \"SecondHalf\": 0 }\r\n    ],\r\n    team1name: \"Team 1\",\r\n    team2name: \"Team 2\"\r\n  }\r\n  upTimeTable = (teamNo, time, chamber, half) => {\r\n    if (teamNo == 1) {\r\n      var buffer = this.state.team1Table\r\n      buffer[chamber - 1][half] = time\r\n      this.setState({ team1Table: buffer })\r\n    }\r\n    else {\r\n      var buffer = this.state.team2Table\r\n      buffer[chamber - 1][half] = time\r\n      this.setState({ team2Table: buffer })\r\n    }\r\n  }\r\n  formatToTime = (time) => {\r\n    return \"\" + (\"0\" + Math.floor((time / 60000) % 60)).slice(-2) + \":\" + (\"0\" + Math.floor((time / 1000) % 60)).slice(-2) + \":\" + (\"0\" + ((time / 10) % 100)).slice(-2)\r\n  }\r\n\r\n  setTeamName = (team1, team2) => {\r\n    this.setState({ team1name: team1, team2name: team2 })\r\n  }\r\n\r\n  plusTime = (teamNo,chamber,half) => {\r\n    if (teamNo == 1) {\r\n      var buffer = this.state.team1Table\r\n      buffer[chamber][half] += 1000\r\n      this.setState({ team1Table: buffer })\r\n    }\r\n    else {\r\n      var buffer = this.state.team2Table\r\n      buffer[chamber][half] += 1000\r\n      this.setState({ team2Table: buffer })\r\n    }\r\n  }\r\n\r\n  minusTime = (teamNo,chamber,half) => {\r\n    if (teamNo == 1) {\r\n      var buffer = this.state.team1Table\r\n      buffer[chamber][half] -= 1000\r\n      this.setState({ team1Table: buffer })\r\n    }\r\n    else {\r\n      var buffer = this.state.team2Table\r\n      buffer[chamber][half] -= 1000\r\n      this.setState({ team2Table: buffer })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar setTeam={this.setTeamName} />\r\n        <br />\r\n        <MDBContainer fluid>\r\n          <MDBRow>\r\n            <MDBCol size=\"8\">\r\n              <h3 className='text-center blue-text'>{this.state.team1name} Picks</h3>\r\n              <hr />\r\n              <PickCard />\r\n            </MDBCol>\r\n            <MDBCol size=\"4\">\r\n              <h3 className='text-center blue-text'>{this.state.team1name} Bans</h3>\r\n              <hr />\r\n              <BanCard />\r\n            </MDBCol>\r\n          </MDBRow>\r\n          <MDBRow>\r\n            <MDBCol size='4'>\r\n              <MDBInput type=\"textarea\" label={this.state.team1name + \" First Half Cards\"} rows=\"3\" icon=\"id-card-alt\" />\r\n            </MDBCol>\r\n            <MDBCol size='4'>\r\n              <MDBInput type=\"textarea\" label={this.state.team1name + \" Second Half Cards\"} rows=\"3\" icon=\"id-card-alt\" />\r\n            </MDBCol>\r\n            <MDBCol size='4'>\r\n            </MDBCol>\r\n          </MDBRow>\r\n          <MDBRow>\r\n            <MDBCol size=\"8\">\r\n              <h3 className='text-center green-text'>{this.state.team2name} Picks</h3>\r\n              <hr />\r\n              <PickCard />\r\n            </MDBCol>\r\n            <MDBCol size=\"4\">\r\n              <h3 className='text-center green-text'>{this.state.team2name} Bans</h3>\r\n              <hr />\r\n              <BanCard />\r\n            </MDBCol>\r\n          </MDBRow>\r\n          <MDBRow>\r\n            <MDBCol size='4'>\r\n              <MDBInput type=\"textarea\" label={this.state.team2name + \" First Half Cards\"} rows=\"3\" icon=\"id-card-alt\" />\r\n            </MDBCol>\r\n            <MDBCol size='4'>\r\n              <MDBInput type=\"textarea\" label={this.state.team2name + \" Second Half Cards\"} rows=\"3\" icon=\"id-card-alt\" />\r\n            </MDBCol>\r\n            <MDBCol size='4'>\r\n            </MDBCol>\r\n          </MDBRow>\r\n          <MDBRow>\r\n            <MDBCol size=\"6\">\r\n              <h3 className='text-center blue-text'>{this.state.team1name} Timings</h3>\r\n              <hr />\r\n              <Stopwatch team={1} updateTable={this.upTimeTable} />\r\n              <MDBTable hover small responsive>\r\n                <MDBTableHead>\r\n                  <tr>\r\n                    <th>Chamber</th>\r\n                    <th>First Half Time</th>\r\n                    <th>Second Half Time</th>\r\n                    <th>Total Time</th>\r\n                  </tr>\r\n                </MDBTableHead>\r\n                <MDBTableBody>\r\n                  {this.state.team1Table && this.state.team1Table.map((x, i) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>12-{++i}</td>\r\n                        <td><MDBBtn size=\"sm\" onClick={() => this.minusTime(1,--i,\"FirstHalf\")} color=\"red\">-</MDBBtn> {this.formatToTime(x.FirstHalf)} <MDBBtn size=\"sm\" onClick={() => this.plusTime(1,--i,\"FirstHalf\")} color=\"blue\">+</MDBBtn></td>\r\n                        <td><MDBBtn size=\"sm\" onClick={() => this.minusTime(1,--i,\"SecondHalf\")} color=\"red\">-</MDBBtn>{this.formatToTime(x.SecondHalf)} <MDBBtn size=\"sm\" onClick={() => this.plusTime(1,--i,\"SecondHalf\")} color=\"blue\">+</MDBBtn></td>\r\n                        <td>{this.formatToTime(x.FirstHalf + x.SecondHalf)} </td>\r\n                      </tr>\r\n                    )\r\n                  })}\r\n                  <tr>\r\n                    <td>Total Time</td>\r\n                    <td>{this.formatToTime(this.state.team1Table.map(x => x.FirstHalf).reduce((x, y) => x + y))}</td>\r\n                    <td>{this.formatToTime(this.state.team1Table.map(x => x.SecondHalf).reduce((x, y) => x + y))}</td>\r\n                    <td>{this.formatToTime(this.state.team1Table.map(x => x.SecondHalf).reduce((x, y) => x + y) + this.state.team1Table.map(x => x.FirstHalf).reduce((x, y) => x + y))}</td>\r\n                  </tr>\r\n                </MDBTableBody>\r\n              </MDBTable>\r\n            </MDBCol>\r\n            <MDBCol size=\"6\">\r\n              <h3 className='text-center green-text'>{this.state.team2name} Timings</h3>\r\n              <hr />\r\n              <Stopwatch team={2} updateTable={this.upTimeTable} />\r\n              <MDBTable hover small responsive>\r\n                <MDBTableHead>\r\n                  <tr>\r\n                    <th>Chamber</th>\r\n                    <th>First Half Time</th>\r\n                    <th>Second Half Time</th>\r\n                    <th>Total Time</th>\r\n                  </tr>\r\n                </MDBTableHead>\r\n                <MDBTableBody>\r\n                  {this.state.team2Table && this.state.team2Table.map((x, i) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>12-{++i}</td>\r\n                        <td><MDBBtn size=\"sm\" onClick={() => this.minusTime(2,--i,\"FirstHalf\")} color=\"red\">-</MDBBtn> {this.formatToTime(x.FirstHalf)} <MDBBtn size=\"sm\" onClick={() => this.plusTime(2,--i,\"FirstHalf\")} color=\"blue\">+</MDBBtn></td>\r\n                        <td><MDBBtn size=\"sm\" onClick={() => this.minusTime(2,--i,\"SecondHalf\")} color=\"red\">-</MDBBtn>{this.formatToTime(x.SecondHalf)} <MDBBtn size=\"sm\" onClick={() => this.plusTime(2,--i,\"SecondHalf\")} color=\"blue\">+</MDBBtn></td>\r\n                        <td>{this.formatToTime(x.FirstHalf + x.SecondHalf)}</td>\r\n                      </tr>\r\n                    )\r\n                  })}\r\n                  <tr>\r\n                    <td>Total Time</td>\r\n                    <td>{this.formatToTime(this.state.team2Table.map(x => x.FirstHalf).reduce((x, y) => x + y))}</td>\r\n                    <td>{this.formatToTime(this.state.team2Table.map(x => x.SecondHalf).reduce((x, y) => x + y))}</td>\r\n                    <td>{this.formatToTime(this.state.team2Table.map(x => x.SecondHalf).reduce((x, y) => x + y) + this.state.team2Table.map(x => x.FirstHalf).reduce((x, y) => x + y))}</td>\r\n                  </tr>\r\n                </MDBTableBody>\r\n              </MDBTable>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n        <br />\r\n        <br />\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Main","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Main from '../pages/Main';\n\n\n\nclass Routes extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path='/' component={Main} /> \n        <Route render={() => <h1>Not Found</h1>} />\n      </Switch>\n    );\n  }\n}\n\nexport default Routes;"," const initState = {\n    login: false,\n};\n\nconst AuthReducers = (state = initState, action) => {\n    switch (action.type) {\n        case 'EMAIL_LOGIN':\n            return {\n                ...state,\n                login: action.payload\n            }\n        default:\n            return state;\n    }\n}\nexport default AuthReducers;","const initState = {\n    blocks: [],\n    validChain: false,\n    balance: '',\n};\n\nconst BlockChainReducers = (state = initState, action) => {\n    switch (action.type) {\n        case 'START_CHAIN':\n            return {\n                ...state,\n                blocks: action.payload\n            }\n        case 'CHECK_CHAIN':\n            return {\n                ...state,\n                validChain: action.payload\n            }\n        case 'GET_NEW_CHAIN':\n            return {\n                ...state,\n                blocks: [...state.blocks, action.payload]\n            }\n        case 'GET_BALANCE':\n            return {\n                ...state,\n                balance: action.payload\n            }\n        default:\n            return state;\n    }\n}\nexport default BlockChainReducers;","import { combineReducers } from 'redux';\nimport AuthReducers from './AuthReducers';\nimport BlockChainReducers from './BlockChainReducers';\n\n/**\n * RootReducer\n */\nconst RootReducer = combineReducers({\n    auth: AuthReducers,\n    blockchain: BlockChainReducers\n});\n\nexport default RootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport RootReducer from '../Reducers/RootReducer'\n\n/**\n * create initial state\n */\nconst initialState = {};\nconst middleWare = [thunk];\nconst store = createStore(RootReducer, initialState, applyMiddleware(...middleWare));\n\nexport default store;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Routes from './router/Routes';\nimport Store from './Redux/Store/Store';\nimport { Provider } from 'react-redux';\n\nclass App extends Component {\n  state = {\n    collapseID: ''\n  };\n  render() {\n\n    const { collapseID } = this.state;\n    return (\n      <Provider store={Store}>\n        <Router>\n          <div className='flyout'>\n            {collapseID && overlay}\n            <main style={{ marginTop: '4rem' }}>\n              <Routes />\n            </main>  \n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render( <App /> , document.getElementById('root'));\n\nregisterServiceWorker();"],"sourceRoot":""}