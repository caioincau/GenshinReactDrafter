{"version":3,"sources":["assets/hyuna.png","components/CoinFlip/Coin.jsx","assets/head.png","assets/tail.png","components/CoinFlip/FlipCoin.jsx","components/share/Navbar.jsx","components/share/Footer.jsx","assets/pick.png","components/CharacterCard/PickCharCard.jsx","components/CharacterCard/PickCard.jsx","assets/ban.png","components/CharacterCard/BanCharCard.jsx","components/CharacterCard/BanCard.jsx","assets/diano.gif","components/Timing/StopWatch.jsx","pages/Main.jsx","router/Routes.js","Redux/Reducers/AuthReducers.jsx","Redux/Reducers/BlockChainReducers.jsx","Redux/Reducers/RootReducer.jsx","Redux/Store/Store.jsx","App.js","registerServiceWorker.js","index.js"],"names":["Coin","className","style","width","height","src","this","props","info","imgSrc","Component","FlipCoin","state","currFace","totalFlips","heads","handleClick","bind","setClick","arr","Math","floor","random","length","newFace","choice","coins","setState","curState","side","flipCoin","defaultProps","head","tail","Navbar","collapseID","username","localStorage","getItem","modal","modal1","modal2","team1name","team2name","toggle","toggle1","toggle2","handleChange","e","target","id","value","toggleCollapse","prevState","closeCollapse","collID","window","scrollTo","updateTeamName","setTeam","coinToss","nader","result","console","log","color","dark","expand","fixed","scrolling","href","hyuna","alt","onClick","isOpen","navbar","right","disabled","exact","to","onChange","label","icon","click","clickChild","size","centered","Footer","PickCharCard","fullcharList","genshindb","characters","matchCategories","charDetails","getCharDetails","picClick","alert","picture","images","pick","waves","selected","map","x","SortableItem","SortableElement","item","SortableList","SortableContainer","items","between","center","index","PickCard","onSortEnd","oldIndex","newIndex","arrayMove","axis","BanCharCard","ban","around","BanCard","Stopwatch","team","updateTable","useState","time","setTime","running","setRunning","chamber","setChamber","half","setHalf","useEffect","interval","setInterval","prevTime","clearInterval","diano","Fragment","slice","Main","team1Table","team2Table","upTimeTable","teamNo","buffer","formatToTime","setTeamName","team1","team2","plusTime","minusTime","fluid","type","rows","hover","small","responsive","i","FirstHalf","SecondHalf","reduce","y","Routes","path","component","render","React","initState","login","AuthReducers","action","payload","blocks","validChain","balance","BlockChainReducers","RootReducer","combineReducers","auth","blockchain","middleWare","thunk","store","createStore","applyMiddleware","App","Store","basename","overlay","marginTop","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.94757247.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hyuna.ddb550dc.png\";","import React,{ Component } from 'react'\n \nclass Coin extends Component{\n  render(){\n    return(\n      <div className='text-center'>\n        <img\n          style={{ width:'200px', height:'200px' }}\n          src={this.props.info.imgSrc}\n        />\n      </div>\n    )\n  }\n}\n \nexport default Coin","export default __webpack_public_path__ + \"static/media/head.0085f11c.png\";","export default __webpack_public_path__ + \"static/media/tail.2549dd14.png\";","import React, { Component } from 'react'\nimport Coin from './Coin'\nimport head from '../../assets/head.png'\nimport tail from '../../assets/tail.png'\n\nclass FlipCoin extends Component {\n    static defaultProps = {\n        coins: [\n            // Sides of the coin\n            {\n                side: 'head', imgSrc: head\n            },\n            {\n                side: 'tail', imgSrc: tail\n            }\n        ]\n    }\n\n    constructor(props) {\n        super(props)\n        // Responsible to render current updated coin face\n        this.state = {\n            currFace: null,\n            totalFlips: 0,\n            heads: 0\n        }\n        this.handleClick = this.handleClick.bind(this)\n    }\n    componentDidMount(){\n        this.props.setClick(this.handleClick)\n    }\n    choice(arr) {\n        const randomIdx = Math.floor(Math.random() * arr.length)\n        return arr[randomIdx]\n    }\n\n    flipCoin() {\n        const newFace = this.choice(this.props.coins)\n        this.setState(curState => {\n            const heads = curState.heads +\n                (newFace.side === 'head' ? 1 : 0)\n            return {\n                currFace: newFace,\n                totalFlips: curState.totalFlips + 1,\n                heads: heads\n            }\n        })\n    }\n    handleClick() {\n        this.flipCoin()\n    }\n    render() {\n        const { currFace, totalFlips, heads } = this.state\n        return (\n            <div className='align-content-center'>\n                {currFace && <Coin info={currFace} />}\n            </div>\n        )\n    }\n}\n\nexport default FlipCoin\n","import React, { Component } from 'react'\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBDropdown, MDBDropdownMenu, MDBDropdownToggle, MDBIcon, MDBDropdownItem, MDBContainer } from 'mdbreact';\nimport hyuna from '../../assets/hyuna.png';\nimport { MDBRow, MDBCol, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBCard, MDBListGroup, MDBListGroupItem, MDBInput } from 'mdbreact';\nimport FlipCoin from '../CoinFlip/FlipCoin';\n\nclass Navbar extends Component {\n\n    state = {\n        collapseID: '',\n        username: localStorage.getItem(\"name\"),\n        modal: false,\n        modal1: false,\n        modal2: false,\n        team1name: \"\",\n        team2name: \"\",\n    };\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n    toggle1 = () => {\n        this.setState({\n            modal1: !this.state.modal1\n        });\n    }\n    toggle2 = () => {\n        this.setState({\n            modal2: !this.state.modal2\n        });\n    }\n    handleChange = (e) => {\n        this.setState({ [e.target.id]: e.target.value })\n    }\n\n    toggleCollapse = collapseID => () =>\n        this.setState(prevState => ({\n            collapseID: prevState.collapseID !== collapseID ? collapseID : ''\n        }));\n\n    closeCollapse = collID => () => {\n        const { collapseID } = this.state;\n        window.scrollTo(0, 0);\n        collapseID === collID && this.setState({ collapseID: '' });\n    };\n    updateTeamName = () => {\n        this.props.setTeam(\"Team \" + this.state.team1name, \"Team \" + this.state.team2name)\n    }\n    coinToss = () => {\n        this.setState({ nader: \"\" }, () => {\n            if (Math.random() < 0.5) {\n                this.setState({ result: \"heads\" });\n                console.log(\"heads\");\n            } else {\n                this.setState({ result: \"tails\" });\n                console.log(\"tails\");\n            }\n        });\n    }\n\n    render() {\n        const { collapseID } = this.state;\n        const overlay = (\n            <div\n                id='sidenav-overlay'\n                style={{ backgroundColor: 'blue' }}\n                onClick={this.toggleCollapse('mainNavbarCollapse')}\n            />\n        );\n        return (\n            <div>\n                <MDBNavbar color='indigo' dark expand='md' fixed='top' scrolling>\n                    <MDBNavbarBrand href='/home' className='py-0 font-weight-bold'>\n                        <img src={hyuna} height=\"50\" alt=\"50\" className=\"rounded-circle\" />\n                        <strong className='align-middle'>X1 lixo?</strong>\n                    </MDBNavbarBrand>\n                    <MDBNavbarToggler\n                        onClick={this.toggleCollapse('mainNavbarCollapse')}\n                    />\n                    <MDBCollapse id='mainNavbarCollapse' isOpen={collapseID} navbar>\n                        <MDBNavbarNav right>\n                            <MDBNavItem>\n                                <MDBNavLink\n                                    disabled\n                                    exact\n                                    to='#'\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\n                                >\n                                    <strong>Imprimir</strong>\n                                </MDBNavLink>\n                            </MDBNavItem>\n                            <MDBNavItem onClick={this.toggle2}>\n                                <MDBNavLink\n                                    exact\n                                    to='#'\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\n                                >\n                                    <strong>Jogar Moeda</strong>\n                                </MDBNavLink>\n                            </MDBNavItem>\n                            <MDBNavItem onClick={this.toggle1}>\n                                <MDBNavLink\n                                    exact\n                                    to='#'\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\n                                >\n                                    <strong>Info do Time</strong>\n                                </MDBNavLink>\n                            </MDBNavItem>\n                            {/* <MDBNavItem onClick={this.toggle}>\n                                <MDBNavLink\n                                    exact\n                                    to='#'\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\n                                >\n                                    <strong>Draft Cycle Info</strong>\n                                </MDBNavLink>\n                            </MDBNavItem> */}\n                        </MDBNavbarNav>\n                    </MDBCollapse>\n                </MDBNavbar>\n\n\n                <MDBModal isOpen={this.state.modal1} toggle={this.toggle1}>\n                    <MDBModalHeader toggle={this.toggle1}>Mudar nome do time</MDBModalHeader>\n                    <MDBModalBody>\n                        <MDBInput onChange={this.handleChange} id=\"team1name\" value={this.state.team1name} label=\"Team 1 Name\" icon=\"users\" />\n                        <MDBInput onChange={this.handleChange} id=\"team2name\" value={this.state.team2name} label=\"Team 2 Name\" icon=\"users\" />\n                    </MDBModalBody>\n                    <MDBModalFooter>\n                        <MDBBtn onClick={this.updateTeamName} color=\"orange\">Salvar</MDBBtn>\n                    </MDBModalFooter>\n                </MDBModal>\n\n                <MDBModal isOpen={this.state.modal2} toggle={this.toggle2}>\n                    <MDBModalHeader toggle={this.toggle2}>Girar moeda</MDBModalHeader>\n                    <MDBModalBody>\n                        <FlipCoin setClick={click => this.clickChild = click} />\n                    </MDBModalBody>\n                    <MDBModalFooter>\n                        <MDBBtn color=\"blue\" onClick={() => this.clickChild()}>Girar moeda</MDBBtn>\n                        <MDBBtn color=\"secondary\" onClick={this.toggle2}>Fechar</MDBBtn>\n                    </MDBModalFooter>\n                </MDBModal>\n\n\n                <MDBModal isOpen={this.state.modal} toggle={this.toggle1} size=\"lg\" centered>\n                    <MDBModalHeader toggle={this.toggle}>Draft Cycle</MDBModalHeader>\n                    <MDBModalBody>\n                        <MDBRow>\n                            <MDBCol>\n                                <h5>First Half Ban / Pick Phase</h5>\n                                <MDBListGroup>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Ban</MDBListGroupItem>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Ban</MDBListGroupItem>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Ban</MDBListGroupItem>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Ban</MDBListGroupItem>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\n                                </MDBListGroup>\n                            </MDBCol>\n                            <MDBCol>\n                                <h5>Second Half Ban / Pick Phase</h5>\n                                <MDBListGroup>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Ban</MDBListGroupItem>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Ban</MDBListGroupItem>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Ban</MDBListGroupItem>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Ban</MDBListGroupItem>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\n                                </MDBListGroup>\n                            </MDBCol>\n                        </MDBRow>\n                        <br />\n                        <p className='text-left red-text font-weight-bold'>*Assume team 1 get first ban pick</p>\n                    </MDBModalBody>\n                    <MDBModalFooter>\n\n                        <MDBBtn color=\"secondary\" onClick={this.toggle}>Close</MDBBtn>\n                    </MDBModalFooter>\n                </MDBModal>\n            </div>\n        )\n\n    }\n}\nexport default Navbar","import React, { Component } from 'react'\nimport { MDBFooter } from 'mdbreact';\n\nexport default class Footer extends Component {\n    /**\n     * Footer \n     * @returns Footer\n     */\n    render() {\n        return (\n            <div>\n                <MDBFooter className=\"fixed-bottom\" color='indigo'>\n                    <p className='footer-copyright mb-0 py-3 text-center'>\n                        https://www.twitch.tv/B3lzeboss                    \n                    </p>\n                </MDBFooter>\n            </div>\n        )\n    }\n}\n","export default __webpack_public_path__ + \"static/media/pick.189ffe1d.png\";","import React, { Component } from 'react'\nimport genshindb from 'genshin-db'\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\nimport pick from '../../assets/pick.png'\n\nclass PickCharCard extends Component {\n  state = {\n    fullcharList: genshindb.characters('names', { matchCategories: true }),\n    charDetails: {}\n  }\n  getCharDetails = (e) => {\n    if(e.target.value === \"null\")\n      return\n    this.setState({ charDetails: genshindb.characters(e.target.value) })\n  }\n  picClick = () => {\n    alert(\"it work\")\n  }\n\n  render() {\n    var picture = this.state.charDetails.images\n    return (\n      <div>\n        <MDBCard color='cyan' style={{ width: \"7rem\" }}>\n          <MDBCardImage className=\"img-fluid\" src={picture ? picture.icon : pick} waves />\n          <MDBCardBody>\n            <MDBCardText>\n              <select onChange={this.getCharDetails} className=\"browser-default custom-select\">\n                <option selected value=\"null\">Select</option>\n                {this.state.fullcharList && this.state.fullcharList.map(x => <option value={x}>{x}</option>)}\n              </select>\n            </MDBCardText>\n          </MDBCardBody>\n        </MDBCard>\n      </div>\n    )\n  }\n}\nexport default PickCharCard","import React, { Component } from 'react'\nimport { SortableContainer, SortableElement, arrayMove } from 'react-sortable-hoc';\nimport { MDBContainer, MDBRow, MDBCol, MDBAnimation, MDBBtn } from \"mdbreact\"\nimport PickCharCard from './PickCharCard';\n\n\nconst SortableItem = SortableElement(({ value }) => {\n    return (\n        <MDBCol size='1'>\n           <PickCharCard item={value} />\n        </MDBCol>\n    )\n});\n\nconst SortableList = SortableContainer(({ items }) => {\n    return (\n        <ul>\n            <MDBRow className='mr-5' between center>\n                {items.map((value, index) => (\n                    <SortableItem key={`item-${value}`} index={index} value={value} />\n                ))}\n            </MDBRow>\n        </ul>\n    );\n});\n\nclass PickCard extends Component {\n    state = {\n        items: ['Pick 1', 'Pick 2', 'Pick 3', 'Pick 4', 'Pick 5', 'Pick 6', 'Pick 7', 'Pick 8'],\n    };\n    onSortEnd = ({ oldIndex, newIndex }) => {\n        this.setState(({ items }) => ({\n            items: arrayMove(items, oldIndex, newIndex),\n        }));\n    };\n\n    render() {\n        return (\n            <div>\n                <SortableList items={this.state.items} onSortEnd={this.onSortEnd} axis=\"xy\" />\n            </div>\n        )\n    }\n}\nexport default PickCard","export default __webpack_public_path__ + \"static/media/ban.94102931.png\";","import React, { Component } from 'react'\nimport genshindb from 'genshin-db'\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\nimport ban from '../../assets/ban.png'\n\nclass BanCharCard extends Component {\n  state = {\n    fullcharList: genshindb.characters('names', { matchCategories: true }),\n    charDetails: {}\n  }\n  getCharDetails = (e) => {\n    if(e.target.value === \"null\")\n      return\n    this.setState({ charDetails: genshindb.characters(e.target.value) })\n  }\n\n  render() {\n    var picture = this.state.charDetails.images\n    return (\n      <div>\n        <MDBCard color='black' style={{ width: \"7rem\" }}>\n          <MDBCardImage className=\"img-fluid\" src={picture ? picture.icon : ban } waves />\n          <MDBCardBody>\n            <MDBCardText>\n              <select onChange={this.getCharDetails} className=\"browser-default custom-select\">\n                <option selected value=\"null\">Select</option>\n                {this.state.fullcharList && this.state.fullcharList.map(x => <option value={x}>{x}</option>)}\n              </select>\n            </MDBCardText>\n          </MDBCardBody>\n        </MDBCard>\n      </div>\n    )\n  }\n}\nexport default BanCharCard","import React, { Component } from 'react'\nimport { SortableContainer, SortableElement, arrayMove } from 'react-sortable-hoc';\nimport { MDBContainer, MDBRow, MDBCol, MDBAnimation, MDBBtn } from \"mdbreact\"\nimport BanCharCard from './BanCharCard';\n\n\nconst SortableItem = SortableElement(({ value }) => {\n    return (\n        <MDBCol size='3'>\n           <BanCharCard item={value} />\n        </MDBCol>\n    )\n});\n\nconst SortableList = SortableContainer(({ items }) => {\n    return (\n        <ul>\n            <MDBRow className='mr-5' around center>\n                {items.map((value, index) => (\n                    <SortableItem key={`item-${value}`} index={index} value={value} />\n                ))}\n            </MDBRow>\n        </ul>\n    );\n});\n\nclass BanCard extends Component {\n    state = {\n        items: ['Ban 1', 'Ban 2', 'Ban 3', 'Ban 4'],\n    };\n    onSortEnd = ({ oldIndex, newIndex }) => {\n        this.setState(({ items }) => ({\n            items: arrayMove(items, oldIndex, newIndex),\n        }));\n    };\n\n    render() {\n        return (\n            <div>\n                <SortableList items={this.state.items} onSortEnd={this.onSortEnd} axis=\"xy\" />\n            </div>\n        )\n    }\n}\nexport default BanCard","export default __webpack_public_path__ + \"static/media/diano.9813c5c6.gif\";","import React, { useState, useEffect } from \"react\";\nimport { MDBRow, MDBCol, MDBAnimation, MDBBtn, MDBContainer } from \"mdbreact\"\nimport diano from '../../assets/diano.gif'\n\nconst Stopwatch = ({ team, updateTable }) => {\n    const [time, setTime] = useState(0);\n    const [running, setRunning] = useState(false);\n    const [chamber, setChamber] = useState(1)\n    const [half, setHalf] = useState(\"FirstHalf\")\n\n    useEffect(() => {\n        let interval;\n        if (running) {\n            interval = setInterval(() => {\n                setTime((prevTime) => prevTime + 10);\n            }, 10);\n        } else if (!running) {\n            clearInterval(interval);\n        }\n        return () => clearInterval(interval);\n    }, [running]);\n    function submitTime() {\n        updateTable(team, time, chamber, half)\n    }\n\n    return (\n        <MDBContainer>\n            <MDBRow>\n                <MDBCol size=\"4\">\n                    <div className=\"stopwatch text-center\">\n                        { running ? <span className=\"font-weight-bold\"><img src={diano} height=\"30\" width=\"30\" /></span> : <React.Fragment></React.Fragment>}\n                        <span className=\"font-weight-bold\">{(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:</span>\n                        <span className=\"font-weight-bold\">{(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}:</span>\n                        <span className=\"font-weight-bold\">{(\"0\" + ((time / 10) % 100)).slice(-2)}</span>\n                        { running ? <span className=\"font-weight-bold\"><img src={diano} height=\"30\" width=\"30\" /></span> : <React.Fragment></React.Fragment>}\n                        <div className=\"buttons\">\n                            <MDBBtn size=\"sm\" color={!running ? \"green\" : \"red\"} onClick={() => setRunning(!running)}>{!running ? \"Start\" : \"Stop\"}</MDBBtn>\n                            <MDBBtn size=\"sm\" color=\"orange\" onClick={() => setTime(0)}>Reset</MDBBtn>\n                        </div>\n\n                    </div>\n                </MDBCol>\n                <MDBCol size=\"8\">\n                    <MDBRow>\n                        <h3>Set timing on:</h3>\n                        <MDBCol>\n                            <select onChange={(e) => setChamber(e.target.value)} className=\"browser-default custom-select\">\n                                <option selected value=\"1\">Chamber 1</option>\n                                <option value=\"2\">Chamber 2</option>\n                                <option value=\"3\">Chamber 3</option>\n                            </select>\n                        </MDBCol>\n                        <MDBCol>\n                            <select onChange={(e) => setHalf(e.target.value)} className=\"browser-default custom-select\">\n                                <option selected value=\"FirstHalf\">First Half</option>\n                                <option value=\"SecondHalf\">Second Half</option>\n                            </select>\n                        </MDBCol>\n                        <MDBBtn size=\"sm\" color=\"blue\" onClick={submitTime}>Submit</MDBBtn>\n                    </MDBRow>\n                </MDBCol>\n            </MDBRow>\n        </MDBContainer >\n    );\n};\n\nexport default Stopwatch;","import React, { Component } from 'react'\nimport Navbar from '../components/share/Navbar'\nimport Footer from '../components/share/Footer'\nimport { MDBContainer, MDBRow, MDBCol, MDBAnimation, MDBBtn, MDBTable, MDBTableBody, MDBTableHead, MDBInput } from \"mdbreact\"\nimport PickCard from '../components/CharacterCard/PickCard'\nimport BanCard from '../components/CharacterCard/BanCard'\nimport Stopwatch from '../components/Timing/StopWatch'\n\nclass Main extends Component {\n\n  state = {\n    team1Table: [\n      { \"FirstHalf\": 0, \"SecondHalf\": 0 },\n      { \"FirstHalf\": 0, \"SecondHalf\": 0 },\n      { \"FirstHalf\": 0, \"SecondHalf\": 0 }\n    ],\n    team2Table: [\n      { \"FirstHalf\": 0, \"SecondHalf\": 0 },\n      { \"FirstHalf\": 0, \"SecondHalf\": 0 },\n      { \"FirstHalf\": 0, \"SecondHalf\": 0 }\n    ],\n    team1name: \"Team 1\",\n    team2name: \"Team 2\"\n  }\n  upTimeTable = (teamNo, time, chamber, half) => {\n    if (teamNo == 1) {\n      var buffer = this.state.team1Table\n      buffer[chamber - 1][half] = time\n      this.setState({ team1Table: buffer })\n    }\n    else {\n      var buffer = this.state.team2Table\n      buffer[chamber - 1][half] = time\n      this.setState({ team2Table: buffer })\n    }\n  }\n  formatToTime = (time) => {\n    return \"\" + (\"0\" + Math.floor((time / 60000) % 60)).slice(-2) + \":\" + (\"0\" + Math.floor((time / 1000) % 60)).slice(-2) + \":\" + (\"0\" + ((time / 10) % 100)).slice(-2)\n  }\n\n  setTeamName = (team1, team2) => {\n    this.setState({ team1name: team1, team2name: team2 })\n  }\n\n  plusTime = (teamNo,chamber,half) => {\n    if (teamNo == 1) {\n      var buffer = this.state.team1Table\n      buffer[chamber][half] += 1000\n      this.setState({ team1Table: buffer })\n    }\n    else {\n      var buffer = this.state.team2Table\n      buffer[chamber][half] += 1000\n      this.setState({ team2Table: buffer })\n    }\n  }\n\n  minusTime = (teamNo,chamber,half) => {\n    if (teamNo == 1) {\n      var buffer = this.state.team1Table\n      buffer[chamber][half] -= 1000\n      this.setState({ team1Table: buffer })\n    }\n    else {\n      var buffer = this.state.team2Table\n      buffer[chamber][half] -= 1000\n      this.setState({ team2Table: buffer })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar setTeam={this.setTeamName} />\n        <br />\n        <MDBContainer fluid>\n          <MDBRow>\n            <MDBCol size=\"8\">\n              <h3 className='text-center blue-text'>{this.state.team1name} Picks</h3>\n              <hr />\n              <PickCard />\n            </MDBCol>\n            <MDBCol size=\"4\">\n              <h3 className='text-center blue-text'>{this.state.team1name} Bans</h3>\n              <hr />\n              <BanCard />\n            </MDBCol>\n          </MDBRow>\n          <MDBRow>\n            <MDBCol size='4'>\n              <MDBInput type=\"textarea\" label={this.state.team1name + \" Primeira Metade\"} rows=\"3\" icon=\"id-card-alt\" />\n            </MDBCol>\n            <MDBCol size='4'>\n              <MDBInput type=\"textarea\" label={this.state.team1name + \" Segunda Metade\"} rows=\"3\" icon=\"id-card-alt\" />\n            </MDBCol>\n            <MDBCol size='4'>\n            </MDBCol>\n          </MDBRow>\n          <MDBRow>\n            <MDBCol size=\"8\">\n              <h3 className='text-center green-text'>{this.state.team2name} Picks</h3>\n              <hr />\n              <PickCard />\n            </MDBCol>\n            <MDBCol size=\"4\">\n              <h3 className='text-center green-text'>{this.state.team2name} Bans</h3>\n              <hr />\n              <BanCard />\n            </MDBCol>\n          </MDBRow>\n          <MDBRow>\n            <MDBCol size='4'>\n              <MDBInput type=\"textarea\" label={this.state.team2name + \" Primeira Metade\"} rows=\"3\" icon=\"id-card-alt\" />\n            </MDBCol>\n            <MDBCol size='4'>\n              <MDBInput type=\"textarea\" label={this.state.team2name + \" Segunda Metade\"} rows=\"3\" icon=\"id-card-alt\" />\n            </MDBCol>\n            <MDBCol size='4'>\n            </MDBCol>\n          </MDBRow>\n          <MDBRow>\n            <MDBCol size=\"6\">\n              <h3 className='text-center blue-text'>{this.state.team1name} Timings</h3>\n              <hr />\n              <Stopwatch team={1} updateTable={this.upTimeTable} />\n              <MDBTable hover small responsive>\n                <MDBTableHead>\n                  <tr>\n                    <th>Chamber</th>\n                    <th>First Half Time</th>\n                    <th>Second Half Time</th>\n                    <th>Total Time</th>\n                  </tr>\n                </MDBTableHead>\n                <MDBTableBody>\n                  {this.state.team1Table && this.state.team1Table.map((x, i) => {\n                    return (\n                      <tr>\n                        <td>12-{++i}</td>\n                        <td><MDBBtn size=\"sm\" onClick={() => this.minusTime(1,--i,\"FirstHalf\")} color=\"red\">-</MDBBtn> {this.formatToTime(x.FirstHalf)} <MDBBtn size=\"sm\" onClick={() => this.plusTime(1,--i,\"FirstHalf\")} color=\"blue\">+</MDBBtn></td>\n                        <td><MDBBtn size=\"sm\" onClick={() => this.minusTime(1,--i,\"SecondHalf\")} color=\"red\">-</MDBBtn>{this.formatToTime(x.SecondHalf)} <MDBBtn size=\"sm\" onClick={() => this.plusTime(1,--i,\"SecondHalf\")} color=\"blue\">+</MDBBtn></td>\n                        <td>{this.formatToTime(x.FirstHalf + x.SecondHalf)} </td>\n                      </tr>\n                    )\n                  })}\n                  <tr>\n                    <td>Total Time</td>\n                    <td>{this.formatToTime(this.state.team1Table.map(x => x.FirstHalf).reduce((x, y) => x + y))}</td>\n                    <td>{this.formatToTime(this.state.team1Table.map(x => x.SecondHalf).reduce((x, y) => x + y))}</td>\n                    <td>{this.formatToTime(this.state.team1Table.map(x => x.SecondHalf).reduce((x, y) => x + y) + this.state.team1Table.map(x => x.FirstHalf).reduce((x, y) => x + y))}</td>\n                  </tr>\n                </MDBTableBody>\n              </MDBTable>\n            </MDBCol>\n            <MDBCol size=\"6\">\n              <h3 className='text-center green-text'>{this.state.team2name} Timings</h3>\n              <hr />\n              <Stopwatch team={2} updateTable={this.upTimeTable} />\n              <MDBTable hover small responsive>\n                <MDBTableHead>\n                  <tr>\n                    <th>Sala</th>\n                    <th>Primeiro lado</th>\n                    <th>Segundo lado</th>\n                    <th>Tempo Total</th>\n                  </tr>\n                </MDBTableHead>\n                <MDBTableBody>\n                  {this.state.team2Table && this.state.team2Table.map((x, i) => {\n                    return (\n                      <tr>\n                        <td>12-{++i}</td>\n                        <td><MDBBtn size=\"sm\" onClick={() => this.minusTime(2,--i,\"FirstHalf\")} color=\"red\">-</MDBBtn> {this.formatToTime(x.FirstHalf)} <MDBBtn size=\"sm\" onClick={() => this.plusTime(2,--i,\"FirstHalf\")} color=\"blue\">+</MDBBtn></td>\n                        <td><MDBBtn size=\"sm\" onClick={() => this.minusTime(2,--i,\"SecondHalf\")} color=\"red\">-</MDBBtn>{this.formatToTime(x.SecondHalf)} <MDBBtn size=\"sm\" onClick={() => this.plusTime(2,--i,\"SecondHalf\")} color=\"blue\">+</MDBBtn></td>\n                        <td>{this.formatToTime(x.FirstHalf + x.SecondHalf)}</td>\n                      </tr>\n                    )\n                  })}\n                  <tr>\n                    <td>Total Time</td>\n                    <td>{this.formatToTime(this.state.team2Table.map(x => x.FirstHalf).reduce((x, y) => x + y))}</td>\n                    <td>{this.formatToTime(this.state.team2Table.map(x => x.SecondHalf).reduce((x, y) => x + y))}</td>\n                    <td>{this.formatToTime(this.state.team2Table.map(x => x.SecondHalf).reduce((x, y) => x + y) + this.state.team2Table.map(x => x.FirstHalf).reduce((x, y) => x + y))}</td>\n                  </tr>\n                </MDBTableBody>\n              </MDBTable>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n        <br />\n        <br />\n        <Footer />\n      </div>\n    )\n  }\n}\nexport default Main","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Main from '../pages/Main';\n\n\n\nclass Routes extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path='/' component={Main} /> \n        <Route render={() => <h1>Not Found</h1>} />\n      </Switch>\n    );\n  }\n}\n\nexport default Routes;"," const initState = {\n    login: false,\n};\n\nconst AuthReducers = (state = initState, action) => {\n    switch (action.type) {\n        case 'EMAIL_LOGIN':\n            return {\n                ...state,\n                login: action.payload\n            }\n        default:\n            return state;\n    }\n}\nexport default AuthReducers;","const initState = {\n    blocks: [],\n    validChain: false,\n    balance: '',\n};\n\nconst BlockChainReducers = (state = initState, action) => {\n    switch (action.type) {\n        case 'START_CHAIN':\n            return {\n                ...state,\n                blocks: action.payload\n            }\n        case 'CHECK_CHAIN':\n            return {\n                ...state,\n                validChain: action.payload\n            }\n        case 'GET_NEW_CHAIN':\n            return {\n                ...state,\n                blocks: [...state.blocks, action.payload]\n            }\n        case 'GET_BALANCE':\n            return {\n                ...state,\n                balance: action.payload\n            }\n        default:\n            return state;\n    }\n}\nexport default BlockChainReducers;","import { combineReducers } from 'redux';\nimport AuthReducers from './AuthReducers';\nimport BlockChainReducers from './BlockChainReducers';\n\n/**\n * RootReducer\n */\nconst RootReducer = combineReducers({\n    auth: AuthReducers,\n    blockchain: BlockChainReducers\n});\n\nexport default RootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport RootReducer from '../Reducers/RootReducer'\n\n/**\n * create initial state\n */\nconst initialState = {};\nconst middleWare = [thunk];\nconst store = createStore(RootReducer, initialState, applyMiddleware(...middleWare));\n\nexport default store;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Routes from './router/Routes';\nimport Store from './Redux/Store/Store';\nimport { Provider } from 'react-redux';\n\nclass App extends Component {\n  state = {\n    collapseID: ''\n  };\n  render() {\n\n    const { collapseID } = this.state;\n    return (\n      <Provider store={Store}>\n        <Router basename='/dist' basename='/dist'>\n          <div className='flyout'>\n            {collapseID && overlay}\n            <main style={{ marginTop: '4rem' }}>\n              <Routes />\n            </main>  \n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render( <App /> , document.getElementById('root'));\n\nregisterServiceWorker();"],"sourceRoot":""}