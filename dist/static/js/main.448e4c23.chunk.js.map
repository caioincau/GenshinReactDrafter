{"version":3,"sources":["assets/hyuna.png","components/CoinFlip/Coin.jsx","assets/head.png","assets/tail.png","components/CoinFlip/FlipCoin.jsx","components/share/Navbar.jsx","components/share/Footer.jsx","assets/pick.png","components/CharacterCard/PickCharCard.jsx","components/CharacterCard/PickCard.jsx","assets/ban.png","components/CharacterCard/BanCharCard.jsx","components/CharacterCard/BanCard.jsx","assets/diano.gif","components/Timing/StopWatch.jsx","pages/Main.jsx","router/Routes.js","Redux/Reducers/AuthReducers.jsx","Redux/Reducers/BlockChainReducers.jsx","Redux/Reducers/RootReducer.jsx","Redux/Store/Store.jsx","App.js","registerServiceWorker.js","index.js"],"names":["Coin","Component","render","className","style","width","height","src","this","props","info","imgSrc","FlipCoin","constructor","super","state","currFace","totalFlips","heads","handleClick","bind","componentDidMount","setClick","choice","arr","Math","floor","random","length","flipCoin","newFace","coins","setState","curState","side","defaultProps","head","tail","Navbar","collapseID","username","localStorage","getItem","modal","modal1","modal2","team1name","team2name","toggle","toggle1","toggle2","handleChange","e","target","id","value","toggleCollapse","prevState","closeCollapse","collID","window","scrollTo","updateTeamName","setTeam","coinToss","nader","result","console","log","color","dark","expand","fixed","scrolling","href","hyuna","alt","onClick","isOpen","navbar","right","disabled","exact","to","onChange","label","icon","click","clickChild","size","centered","Footer","PickCharCard","fullcharList","genshindb","characters","matchCategories","charDetails","getCharDetails","picClick","alert","picture","images","pick","waves","selected","map","x","SortableItem","SortableElement","item","SortableList","SortableContainer","items","between","center","index","PickCard","onSortEnd","oldIndex","newIndex","arrayMove","axis","BanCharCard","ban","around","BanCard","Stopwatch","team","updateTable","useState","time","setTime","running","setRunning","chamber","setChamber","half","setHalf","useEffect","interval","setInterval","prevTime","clearInterval","diano","Fragment","slice","Main","team1Table","team2Table","upTimeTable","teamNo","buffer","formatToTime","setTeamName","team1","team2","plusTime","minusTime","fluid","type","rows","hover","small","responsive","i","FirstHalf","SecondHalf","reduce","y","Routes","React","path","component","initState","login","AuthReducers","action","payload","blocks","validChain","balance","BlockChainReducers","RootReducer","combineReducers","auth","blockchain","middleWare","thunk","store","createStore","applyMiddleware","App","Store","basename","overlay","marginTop","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.448e4c23.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hyuna.ddb550dc.png\";","import React,{ Component } from 'react'\n \nclass Coin extends Component{\n  render(){\n    return(\n      <div className='text-center'>\n        <img\n          style={{ width:'200px', height:'200px' }}\n          src={this.props.info.imgSrc}\n        />\n      </div>\n    )\n  }\n}\n \nexport default Coin","export default __webpack_public_path__ + \"static/media/head.0085f11c.png\";","export default __webpack_public_path__ + \"static/media/tail.2549dd14.png\";","import React, { Component } from 'react'\nimport Coin from './Coin'\nimport head from '../../assets/head.png'\nimport tail from '../../assets/tail.png'\n\nclass FlipCoin extends Component {\n    static defaultProps = {\n        coins: [\n            // Sides of the coin\n            {\n                side: 'head', imgSrc: head\n            },\n            {\n                side: 'tail', imgSrc: tail\n            }\n        ]\n    }\n\n    constructor(props) {\n        super(props)\n        // Responsible to render current updated coin face\n        this.state = {\n            currFace: null,\n            totalFlips: 0,\n            heads: 0\n        }\n        this.handleClick = this.handleClick.bind(this)\n    }\n    componentDidMount(){\n        this.props.setClick(this.handleClick)\n    }\n    choice(arr) {\n        const randomIdx = Math.floor(Math.random() * arr.length)\n        return arr[randomIdx]\n    }\n\n    flipCoin() {\n        const newFace = this.choice(this.props.coins)\n        this.setState(curState => {\n            const heads = curState.heads +\n                (newFace.side === 'head' ? 1 : 0)\n            return {\n                currFace: newFace,\n                totalFlips: curState.totalFlips + 1,\n                heads: heads\n            }\n        })\n    }\n    handleClick() {\n        this.flipCoin()\n    }\n    render() {\n        const { currFace, totalFlips, heads } = this.state\n        return (\n            <div className='align-content-center'>\n                {currFace && <Coin info={currFace} />}\n            </div>\n        )\n    }\n}\n\nexport default FlipCoin\n","import React, { Component } from 'react'\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBDropdown, MDBDropdownMenu, MDBDropdownToggle, MDBIcon, MDBDropdownItem, MDBContainer } from 'mdbreact';\nimport hyuna from '../../assets/hyuna.png';\nimport { MDBRow, MDBCol, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBCard, MDBListGroup, MDBListGroupItem, MDBInput } from 'mdbreact';\nimport FlipCoin from '../CoinFlip/FlipCoin';\n\nclass Navbar extends Component {\n\n    state = {\n        collapseID: '',\n        username: localStorage.getItem(\"name\"),\n        modal: false,\n        modal1: false,\n        modal2: false,\n        team1name: \"\",\n        team2name: \"\",\n    };\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n    toggle1 = () => {\n        this.setState({\n            modal1: !this.state.modal1\n        });\n    }\n    toggle2 = () => {\n        this.setState({\n            modal2: !this.state.modal2\n        });\n    }\n    handleChange = (e) => {\n        this.setState({ [e.target.id]: e.target.value })\n    }\n\n    toggleCollapse = collapseID => () =>\n        this.setState(prevState => ({\n            collapseID: prevState.collapseID !== collapseID ? collapseID : ''\n        }));\n\n    closeCollapse = collID => () => {\n        const { collapseID } = this.state;\n        window.scrollTo(0, 0);\n        collapseID === collID && this.setState({ collapseID: '' });\n    };\n    updateTeamName = () => {\n        this.props.setTeam(\"Team \" + this.state.team1name, \"Team \" + this.state.team2name)\n    }\n    coinToss = () => {\n        this.setState({ nader: \"\" }, () => {\n            if (Math.random() < 0.5) {\n                this.setState({ result: \"heads\" });\n                console.log(\"heads\");\n            } else {\n                this.setState({ result: \"tails\" });\n                console.log(\"tails\");\n            }\n        });\n    }\n\n    render() {\n        const { collapseID } = this.state;\n        const overlay = (\n            <div\n                id='sidenav-overlay'\n                style={{ backgroundColor: 'blue' }}\n                onClick={this.toggleCollapse('mainNavbarCollapse')}\n            />\n        );\n        return (\n            <div>\n                <MDBNavbar color='indigo' dark expand='md' fixed='top' scrolling>\n                    <MDBNavbarBrand href='/home' className='py-0 font-weight-bold'>\n                        <img src={hyuna} height=\"50\" alt=\"50\" className=\"rounded-circle\" />\n                        <strong className='align-middle'>X1 lixo?</strong>\n                    </MDBNavbarBrand>\n                    <MDBNavbarToggler\n                        onClick={this.toggleCollapse('mainNavbarCollapse')}\n                    />\n                    <MDBCollapse id='mainNavbarCollapse' isOpen={collapseID} navbar>\n                        <MDBNavbarNav right>\n                            <MDBNavItem>\n                                <MDBNavLink\n                                    disabled\n                                    exact\n                                    to='#'\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\n                                >\n                                    <strong>Imprimir</strong>\n                                </MDBNavLink>\n                            </MDBNavItem>\n                            <MDBNavItem onClick={this.toggle2}>\n                                <MDBNavLink\n                                    exact\n                                    to='#'\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\n                                >\n                                    <strong>Jogar Moeda</strong>\n                                </MDBNavLink>\n                            </MDBNavItem>\n                            <MDBNavItem onClick={this.toggle1}>\n                                <MDBNavLink\n                                    exact\n                                    to='#'\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\n                                >\n                                    <strong>Info do Time</strong>\n                                </MDBNavLink>\n                            </MDBNavItem>\n                            {/* <MDBNavItem onClick={this.toggle}>\n                                <MDBNavLink\n                                    exact\n                                    to='#'\n                                    onClick={this.closeCollapse('mainNavbarCollapse')}\n                                >\n                                    <strong>Draft Cycle Info</strong>\n                                </MDBNavLink>\n                            </MDBNavItem> */}\n                        </MDBNavbarNav>\n                    </MDBCollapse>\n                </MDBNavbar>\n\n\n                <MDBModal isOpen={this.state.modal1} toggle={this.toggle1}>\n                    <MDBModalHeader toggle={this.toggle1}>Mudar nome do time</MDBModalHeader>\n                    <MDBModalBody>\n                        <MDBInput onChange={this.handleChange} id=\"team1name\" value={this.state.team1name} label=\"Team 1 Name\" icon=\"users\" />\n                        <MDBInput onChange={this.handleChange} id=\"team2name\" value={this.state.team2name} label=\"Team 2 Name\" icon=\"users\" />\n                    </MDBModalBody>\n                    <MDBModalFooter>\n                        <MDBBtn onClick={this.updateTeamName} color=\"orange\">Salvar</MDBBtn>\n                    </MDBModalFooter>\n                </MDBModal>\n\n                <MDBModal isOpen={this.state.modal2} toggle={this.toggle2}>\n                    <MDBModalHeader toggle={this.toggle2}>Girar moeda</MDBModalHeader>\n                    <MDBModalBody>\n                        <FlipCoin setClick={click => this.clickChild = click} />\n                    </MDBModalBody>\n                    <MDBModalFooter>\n                        <MDBBtn color=\"blue\" onClick={() => this.clickChild()}>Girar moeda</MDBBtn>\n                        <MDBBtn color=\"secondary\" onClick={this.toggle2}>Fechar</MDBBtn>\n                    </MDBModalFooter>\n                </MDBModal>\n\n\n                <MDBModal isOpen={this.state.modal} toggle={this.toggle1} size=\"lg\" centered>\n                    <MDBModalHeader toggle={this.toggle}>Draft Cycle</MDBModalHeader>\n                    <MDBModalBody>\n                        <MDBRow>\n                            <MDBCol>\n                                <h5>First Half Ban / Pick Phase</h5>\n                                <MDBListGroup>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Ban</MDBListGroupItem>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Ban</MDBListGroupItem>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Ban</MDBListGroupItem>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Ban</MDBListGroupItem>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\n                                </MDBListGroup>\n                            </MDBCol>\n                            <MDBCol>\n                                <h5>Second Half Ban / Pick Phase</h5>\n                                <MDBListGroup>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Ban</MDBListGroupItem>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Ban</MDBListGroupItem>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Ban</MDBListGroupItem>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Ban</MDBListGroupItem>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='blue-text font-weight-bolder'>Team 1 Pick</MDBListGroupItem>\n                                    <MDBListGroupItem className='green-text font-weight-bolder'>Team 2 Pick</MDBListGroupItem>\n                                </MDBListGroup>\n                            </MDBCol>\n                        </MDBRow>\n                        <br />\n                        <p className='text-left red-text font-weight-bold'>*Assume team 1 get first ban pick</p>\n                    </MDBModalBody>\n                    <MDBModalFooter>\n\n                        <MDBBtn color=\"secondary\" onClick={this.toggle}>Close</MDBBtn>\n                    </MDBModalFooter>\n                </MDBModal>\n            </div>\n        )\n\n    }\n}\nexport default Navbar","import React, { Component } from 'react'\nimport { MDBFooter } from 'mdbreact';\n\nexport default class Footer extends Component {\n    /**\n     * Footer \n     * @returns Footer\n     */\n    render() {\n        return (\n            <div>\n                <MDBFooter className=\"fixed-bottom\" color='indigo'>\n                    <p className='footer-copyright mb-0 py-3 text-center'>\n                        https://www.twitch.tv/B3lzeboss                    \n                    </p>\n                </MDBFooter>\n            </div>\n        )\n    }\n}\n","export default __webpack_public_path__ + \"static/media/pick.189ffe1d.png\";","import React, { Component } from 'react'\nimport genshindb from 'genshin-db'\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\nimport pick from '../../assets/pick.png'\n\nclass PickCharCard extends Component {\n  state = {\n    fullcharList: genshindb.characters('names', { matchCategories: true }),\n    charDetails: {}\n  }\n  getCharDetails = (e) => {\n    if(e.target.value === \"null\")\n      return\n    this.setState({ charDetails: genshindb.characters(e.target.value) })\n  }\n  picClick = () => {\n    alert(\"it work\")\n  }\n\n  render() {\n    var picture = this.state.charDetails.images\n    return (\n      <div>\n        <MDBCard color='cyan' style={{ width: \"7rem\" }}>\n          <MDBCardImage className=\"img-fluid\" src={picture ? picture.icon : pick} waves />\n          <MDBCardBody>\n            <MDBCardText>\n              <select onChange={this.getCharDetails} className=\"browser-default custom-select\">\n                <option selected value=\"null\">Select</option>\n                {this.state.fullcharList && this.state.fullcharList.map(x => <option value={x}>{x}</option>)}\n              </select>\n            </MDBCardText>\n          </MDBCardBody>\n        </MDBCard>\n      </div>\n    )\n  }\n}\nexport default PickCharCard","import React, { Component } from 'react'\nimport { SortableContainer, SortableElement, arrayMove } from 'react-sortable-hoc';\nimport { MDBContainer, MDBRow, MDBCol, MDBAnimation, MDBBtn } from \"mdbreact\"\nimport PickCharCard from './PickCharCard';\n\n\nconst SortableItem = SortableElement(({ value }) => {\n    return (\n        <MDBCol size='1'>\n           <PickCharCard item={value} />\n        </MDBCol>\n    )\n});\n\nconst SortableList = SortableContainer(({ items }) => {\n    return (\n        <ul>\n            <MDBRow className='mr-5' between center>\n                {items.map((value, index) => (\n                    <SortableItem key={`item-${value}`} index={index} value={value} />\n                ))}\n            </MDBRow>\n        </ul>\n    );\n});\n\nclass PickCard extends Component {\n    state = {\n        items: ['Pick 1', 'Pick 2', 'Pick 3', 'Pick 4', 'Pick 5', 'Pick 6', 'Pick 7', 'Pick 8'],\n    };\n    onSortEnd = ({ oldIndex, newIndex }) => {\n        this.setState(({ items }) => ({\n            items: arrayMove(items, oldIndex, newIndex),\n        }));\n    };\n\n    render() {\n        return (\n            <div>\n                <SortableList items={this.state.items} onSortEnd={this.onSortEnd} axis=\"xy\" />\n            </div>\n        )\n    }\n}\nexport default PickCard","export default __webpack_public_path__ + \"static/media/ban.94102931.png\";","import React, { Component } from 'react'\nimport genshindb from 'genshin-db'\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\nimport ban from '../../assets/ban.png'\n\nclass BanCharCard extends Component {\n  state = {\n    fullcharList: genshindb.characters('names', { matchCategories: true }),\n    charDetails: {}\n  }\n  getCharDetails = (e) => {\n    if(e.target.value === \"null\")\n      return\n    this.setState({ charDetails: genshindb.characters(e.target.value) })\n  }\n\n  render() {\n    var picture = this.state.charDetails.images\n    return (\n      <div>\n        <MDBCard color='black' style={{ width: \"7rem\" }}>\n          <MDBCardImage className=\"img-fluid\" src={picture ? picture.icon : ban } waves />\n          <MDBCardBody>\n            <MDBCardText>\n              <select onChange={this.getCharDetails} className=\"browser-default custom-select\">\n                <option selected value=\"null\">Select</option>\n                {this.state.fullcharList && this.state.fullcharList.map(x => <option value={x}>{x}</option>)}\n              </select>\n            </MDBCardText>\n          </MDBCardBody>\n        </MDBCard>\n      </div>\n    )\n  }\n}\nexport default BanCharCard","import React, { Component } from 'react'\nimport { SortableContainer, SortableElement, arrayMove } from 'react-sortable-hoc';\nimport { MDBContainer, MDBRow, MDBCol, MDBAnimation, MDBBtn } from \"mdbreact\"\nimport BanCharCard from './BanCharCard';\n\n\nconst SortableItem = SortableElement(({ value }) => {\n    return (\n        <MDBCol size='3'>\n           <BanCharCard item={value} />\n        </MDBCol>\n    )\n});\n\nconst SortableList = SortableContainer(({ items }) => {\n    return (\n        <ul>\n            <MDBRow className='mr-5' around center>\n                {items.map((value, index) => (\n                    <SortableItem key={`item-${value}`} index={index} value={value} />\n                ))}\n            </MDBRow>\n        </ul>\n    );\n});\n\nclass BanCard extends Component {\n    state = {\n        items: ['Ban 1', 'Ban 2', 'Ban 3', 'Ban 4'],\n    };\n    onSortEnd = ({ oldIndex, newIndex }) => {\n        this.setState(({ items }) => ({\n            items: arrayMove(items, oldIndex, newIndex),\n        }));\n    };\n\n    render() {\n        return (\n            <div>\n                <SortableList items={this.state.items} onSortEnd={this.onSortEnd} axis=\"xy\" />\n            </div>\n        )\n    }\n}\nexport default BanCard","export default __webpack_public_path__ + \"static/media/diano.9813c5c6.gif\";","import React, { useState, useEffect } from \"react\";\nimport { MDBRow, MDBCol, MDBAnimation, MDBBtn, MDBContainer } from \"mdbreact\"\nimport diano from '../../assets/diano.gif'\n\nconst Stopwatch = ({ team, updateTable }) => {\n    const [time, setTime] = useState(0);\n    const [running, setRunning] = useState(false);\n    const [chamber, setChamber] = useState(1)\n    const [half, setHalf] = useState(\"FirstHalf\")\n\n    useEffect(() => {\n        let interval;\n        if (running) {\n            interval = setInterval(() => {\n                setTime((prevTime) => prevTime + 10);\n            }, 10);\n        } else if (!running) {\n            clearInterval(interval);\n        }\n        return () => clearInterval(interval);\n    }, [running]);\n    function submitTime() {\n        updateTable(team, time, chamber, half)\n    }\n\n    return (\n        <MDBContainer>\n            <MDBRow>\n                <MDBCol size=\"4\">\n                    <div className=\"stopwatch text-center\">\n                        { running ? <span className=\"font-weight-bold\"><img src={diano} height=\"30\" width=\"30\" /></span> : <React.Fragment></React.Fragment>}\n                        <span className=\"font-weight-bold\">{(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:</span>\n                        <span className=\"font-weight-bold\">{(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}:</span>\n                        <span className=\"font-weight-bold\">{(\"0\" + ((time / 10) % 100)).slice(-2)}</span>\n                        { running ? <span className=\"font-weight-bold\"><img src={diano} height=\"30\" width=\"30\" /></span> : <React.Fragment></React.Fragment>}\n                        <div className=\"buttons\">\n                            <MDBBtn size=\"sm\" color={!running ? \"green\" : \"red\"} onClick={() => setRunning(!running)}>{!running ? \"Start\" : \"Stop\"}</MDBBtn>\n                            <MDBBtn size=\"sm\" color=\"orange\" onClick={() => setTime(0)}>Reset</MDBBtn>\n                        </div>\n\n                    </div>\n                </MDBCol>\n                <MDBCol size=\"8\">\n                    <MDBRow>\n                        <h3>Set timing on:</h3>\n                        <MDBCol>\n                            <select onChange={(e) => setChamber(e.target.value)} className=\"browser-default custom-select\">\n                                <option selected value=\"1\">Chamber 1</option>\n                                <option value=\"2\">Chamber 2</option>\n                                <option value=\"3\">Chamber 3</option>\n                            </select>\n                        </MDBCol>\n                        <MDBCol>\n                            <select onChange={(e) => setHalf(e.target.value)} className=\"browser-default custom-select\">\n                                <option selected value=\"FirstHalf\">First Half</option>\n                                <option value=\"SecondHalf\">Second Half</option>\n                            </select>\n                        </MDBCol>\n                        <MDBBtn size=\"sm\" color=\"blue\" onClick={submitTime}>Submit</MDBBtn>\n                    </MDBRow>\n                </MDBCol>\n            </MDBRow>\n        </MDBContainer >\n    );\n};\n\nexport default Stopwatch;","import React, { Component } from 'react'\nimport Navbar from '../components/share/Navbar'\nimport Footer from '../components/share/Footer'\nimport { MDBContainer, MDBRow, MDBCol, MDBAnimation, MDBBtn, MDBTable, MDBTableBody, MDBTableHead, MDBInput } from \"mdbreact\"\nimport PickCard from '../components/CharacterCard/PickCard'\nimport BanCard from '../components/CharacterCard/BanCard'\nimport Stopwatch from '../components/Timing/StopWatch'\n\nclass Main extends Component {\n\n  state = {\n    team1Table: [\n      { \"FirstHalf\": 0, \"SecondHalf\": 0 },\n      { \"FirstHalf\": 0, \"SecondHalf\": 0 },\n      { \"FirstHalf\": 0, \"SecondHalf\": 0 }\n    ],\n    team2Table: [\n      { \"FirstHalf\": 0, \"SecondHalf\": 0 },\n      { \"FirstHalf\": 0, \"SecondHalf\": 0 },\n      { \"FirstHalf\": 0, \"SecondHalf\": 0 }\n    ],\n    team1name: \"Team 1\",\n    team2name: \"Team 2\"\n  }\n  upTimeTable = (teamNo, time, chamber, half) => {\n    if (teamNo == 1) {\n      var buffer = this.state.team1Table\n      buffer[chamber - 1][half] = time\n      this.setState({ team1Table: buffer })\n    }\n    else {\n      var buffer = this.state.team2Table\n      buffer[chamber - 1][half] = time\n      this.setState({ team2Table: buffer })\n    }\n  }\n  formatToTime = (time) => {\n    return \"\" + (\"0\" + Math.floor((time / 60000) % 60)).slice(-2) + \":\" + (\"0\" + Math.floor((time / 1000) % 60)).slice(-2) + \":\" + (\"0\" + ((time / 10) % 100)).slice(-2)\n  }\n\n  setTeamName = (team1, team2) => {\n    this.setState({ team1name: team1, team2name: team2 })\n  }\n\n  plusTime = (teamNo,chamber,half) => {\n    if (teamNo == 1) {\n      var buffer = this.state.team1Table\n      buffer[chamber][half] += 1000\n      this.setState({ team1Table: buffer })\n    }\n    else {\n      var buffer = this.state.team2Table\n      buffer[chamber][half] += 1000\n      this.setState({ team2Table: buffer })\n    }\n  }\n\n  minusTime = (teamNo,chamber,half) => {\n    if (teamNo == 1) {\n      var buffer = this.state.team1Table\n      buffer[chamber][half] -= 1000\n      this.setState({ team1Table: buffer })\n    }\n    else {\n      var buffer = this.state.team2Table\n      buffer[chamber][half] -= 1000\n      this.setState({ team2Table: buffer })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar setTeam={this.setTeamName} />\n        <br />\n        <MDBContainer fluid>\n          <MDBRow>\n            <MDBCol size=\"8\">\n              <h3 className='text-center blue-text'>{this.state.team1name} Picks</h3>\n              <hr />\n              <PickCard />\n            </MDBCol>\n            <MDBCol size=\"4\">\n              <h3 className='text-center blue-text'>{this.state.team1name} Bans</h3>\n              <hr />\n              <BanCard />\n            </MDBCol>\n          </MDBRow>\n          <MDBRow>\n            <MDBCol size='4'>\n              <MDBInput type=\"textarea\" label={this.state.team1name + \" Primeira Metade\"} rows=\"3\" icon=\"id-card-alt\" />\n            </MDBCol>\n            <MDBCol size='4'>\n              <MDBInput type=\"textarea\" label={this.state.team1name + \" Segunda Metade\"} rows=\"3\" icon=\"id-card-alt\" />\n            </MDBCol>\n            <MDBCol size='4'>\n            </MDBCol>\n          </MDBRow>\n          <MDBRow>\n            <MDBCol size=\"8\">\n              <h3 className='text-center green-text'>{this.state.team2name} Picks</h3>\n              <hr />\n              <PickCard />\n            </MDBCol>\n            <MDBCol size=\"4\">\n              <h3 className='text-center green-text'>{this.state.team2name} Bans</h3>\n              <hr />\n              <BanCard />\n            </MDBCol>\n          </MDBRow>\n          <MDBRow>\n            <MDBCol size='4'>\n              <MDBInput type=\"textarea\" label={this.state.team2name + \" Primeira Metade\"} rows=\"3\" icon=\"id-card-alt\" />\n            </MDBCol>\n            <MDBCol size='4'>\n              <MDBInput type=\"textarea\" label={this.state.team2name + \" Segunda Metade\"} rows=\"3\" icon=\"id-card-alt\" />\n            </MDBCol>\n            <MDBCol size='4'>\n            </MDBCol>\n          </MDBRow>\n          <MDBRow>\n            <MDBCol size=\"6\">\n              <h3 className='text-center blue-text'>{this.state.team1name} Timings</h3>\n              <hr />\n              <Stopwatch team={1} updateTable={this.upTimeTable} />\n              <MDBTable hover small responsive>\n                <MDBTableHead>\n                  <tr>\n                    <th>Chamber</th>\n                    <th>First Half Time</th>\n                    <th>Second Half Time</th>\n                    <th>Total Time</th>\n                  </tr>\n                </MDBTableHead>\n                <MDBTableBody>\n                  {this.state.team1Table && this.state.team1Table.map((x, i) => {\n                    return (\n                      <tr>\n                        <td>12-{++i}</td>\n                        <td><MDBBtn size=\"sm\" onClick={() => this.minusTime(1,--i,\"FirstHalf\")} color=\"red\">-</MDBBtn> {this.formatToTime(x.FirstHalf)} <MDBBtn size=\"sm\" onClick={() => this.plusTime(1,--i,\"FirstHalf\")} color=\"blue\">+</MDBBtn></td>\n                        <td><MDBBtn size=\"sm\" onClick={() => this.minusTime(1,--i,\"SecondHalf\")} color=\"red\">-</MDBBtn>{this.formatToTime(x.SecondHalf)} <MDBBtn size=\"sm\" onClick={() => this.plusTime(1,--i,\"SecondHalf\")} color=\"blue\">+</MDBBtn></td>\n                        <td>{this.formatToTime(x.FirstHalf + x.SecondHalf)} </td>\n                      </tr>\n                    )\n                  })}\n                  <tr>\n                    <td>Total Time</td>\n                    <td>{this.formatToTime(this.state.team1Table.map(x => x.FirstHalf).reduce((x, y) => x + y))}</td>\n                    <td>{this.formatToTime(this.state.team1Table.map(x => x.SecondHalf).reduce((x, y) => x + y))}</td>\n                    <td>{this.formatToTime(this.state.team1Table.map(x => x.SecondHalf).reduce((x, y) => x + y) + this.state.team1Table.map(x => x.FirstHalf).reduce((x, y) => x + y))}</td>\n                  </tr>\n                </MDBTableBody>\n              </MDBTable>\n            </MDBCol>\n            <MDBCol size=\"6\">\n              <h3 className='text-center green-text'>{this.state.team2name} Timings</h3>\n              <hr />\n              <Stopwatch team={2} updateTable={this.upTimeTable} />\n              <MDBTable hover small responsive>\n                <MDBTableHead>\n                  <tr>\n                    <th>Sala</th>\n                    <th>Primeiro lado</th>\n                    <th>Segundo lado</th>\n                    <th>Tempo Total</th>\n                  </tr>\n                </MDBTableHead>\n                <MDBTableBody>\n                  {this.state.team2Table && this.state.team2Table.map((x, i) => {\n                    return (\n                      <tr>\n                        <td>12-{++i}</td>\n                        <td><MDBBtn size=\"sm\" onClick={() => this.minusTime(2,--i,\"FirstHalf\")} color=\"red\">-</MDBBtn> {this.formatToTime(x.FirstHalf)} <MDBBtn size=\"sm\" onClick={() => this.plusTime(2,--i,\"FirstHalf\")} color=\"blue\">+</MDBBtn></td>\n                        <td><MDBBtn size=\"sm\" onClick={() => this.minusTime(2,--i,\"SecondHalf\")} color=\"red\">-</MDBBtn>{this.formatToTime(x.SecondHalf)} <MDBBtn size=\"sm\" onClick={() => this.plusTime(2,--i,\"SecondHalf\")} color=\"blue\">+</MDBBtn></td>\n                        <td>{this.formatToTime(x.FirstHalf + x.SecondHalf)}</td>\n                      </tr>\n                    )\n                  })}\n                  <tr>\n                    <td>Total Time</td>\n                    <td>{this.formatToTime(this.state.team2Table.map(x => x.FirstHalf).reduce((x, y) => x + y))}</td>\n                    <td>{this.formatToTime(this.state.team2Table.map(x => x.SecondHalf).reduce((x, y) => x + y))}</td>\n                    <td>{this.formatToTime(this.state.team2Table.map(x => x.SecondHalf).reduce((x, y) => x + y) + this.state.team2Table.map(x => x.FirstHalf).reduce((x, y) => x + y))}</td>\n                  </tr>\n                </MDBTableBody>\n              </MDBTable>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n        <br />\n        <br />\n        <Footer />\n      </div>\n    )\n  }\n}\nexport default Main","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Main from '../pages/Main';\n\n\n\nclass Routes extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path='/' component={Main} /> \n        <Route render={() => <h1>Not Found</h1>} />\n      </Switch>\n    );\n  }\n}\n\nexport default Routes;"," const initState = {\n    login: false,\n};\n\nconst AuthReducers = (state = initState, action) => {\n    switch (action.type) {\n        case 'EMAIL_LOGIN':\n            return {\n                ...state,\n                login: action.payload\n            }\n        default:\n            return state;\n    }\n}\nexport default AuthReducers;","const initState = {\n    blocks: [],\n    validChain: false,\n    balance: '',\n};\n\nconst BlockChainReducers = (state = initState, action) => {\n    switch (action.type) {\n        case 'START_CHAIN':\n            return {\n                ...state,\n                blocks: action.payload\n            }\n        case 'CHECK_CHAIN':\n            return {\n                ...state,\n                validChain: action.payload\n            }\n        case 'GET_NEW_CHAIN':\n            return {\n                ...state,\n                blocks: [...state.blocks, action.payload]\n            }\n        case 'GET_BALANCE':\n            return {\n                ...state,\n                balance: action.payload\n            }\n        default:\n            return state;\n    }\n}\nexport default BlockChainReducers;","import { combineReducers } from 'redux';\nimport AuthReducers from './AuthReducers';\nimport BlockChainReducers from './BlockChainReducers';\n\n/**\n * RootReducer\n */\nconst RootReducer = combineReducers({\n    auth: AuthReducers,\n    blockchain: BlockChainReducers\n});\n\nexport default RootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport RootReducer from '../Reducers/RootReducer'\n\n/**\n * create initial state\n */\nconst initialState = {};\nconst middleWare = [thunk];\nconst store = createStore(RootReducer, initialState, applyMiddleware(...middleWare));\n\nexport default store;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Routes from './router/Routes';\nimport Store from './Redux/Store/Store';\nimport { Provider } from 'react-redux';\n\nclass App extends Component {\n  state = {\n    collapseID: ''\n  };\n  render() {\n\n    const { collapseID } = this.state;\n    return (\n      <Provider store={Store}>\n        <Router basename='/dist' basename='/dist'>\n          <div className='flyout'>\n            {collapseID && overlay}\n            <main style={{ marginTop: '4rem' }}>\n              <Routes />\n            </main>  \n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render( <App /> , document.getElementById('root'));\n\nregisterServiceWorker();"],"sourceRoot":""}